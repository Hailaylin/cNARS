/*
	Parser header generated by unicc from narsese.par.
	DO NOT EDIT THIS FILE MANUALLY, IT WILL GO AWAY!
*/

#ifndef NARSESE_H
#define NARSESE_H

#include <cstddef>
#include <cstdio>
#include <string>

/* Wide character processing enabled? */
#ifndef UNICC_WCHAR
#define UNICC_WCHAR					0
#endif

/* UTF-8 processing enabled? */
#if !UNICC_WCHAR
#ifndef UNICC_UTF8
#	define UNICC_UTF8				1
#endif
#else
#	ifdef UNICC_UTF8
#	undef UNICC_UTF8
#	endif
#	define UNICC_UTF8				0
#endif

/* UNICC_CHAR is used as character type for internal processing */
#ifndef UNICC_CHAR
#if UNICC_UTF8 || UNICC_WCHAR
#	define UNICC_CHAR				wchar_t
#	define UNICC_CHAR_FORMAT		"%S"
#else
#	define UNICC_CHAR				char
#	define UNICC_CHAR_FORMAT		"%s"
#endif
#endif /* UNICC_CHAR */

/* UNICC_SCHAR defines the character type for semantic action procession */
#ifndef UNICC_SCHAR
#if UNICC_WCHAR
#	define UNICC_SCHAR				wchar_t
#	define UNICC_SCHAR_FORMAT		"%S"
#else
#	define UNICC_SCHAR				char
#	define UNICC_SCHAR_FORMAT		"%s"
#endif
#endif /* UNICC_SCHAR */

/* Debug level */
#ifndef UNICC_DEBUG
#define UNICC_DEBUG				0
#endif

/* Stack debug switch */
#ifndef UNICC_STACKDEBUG
#define UNICC_STACKDEBUG		0
#endif

/* Parse error macro */
#ifndef UNICC_PARSE_ERROR
#define UNICC_PARSE_ERROR( parser ) \
	fprintf( stderr, "line %d, column %d: syntax error on symbol %d, token '" \
		UNICC_SCHAR_FORMAT "'\n", \
	parser->line, parser->column, parser->sym, parser->get_lexem() )
#endif

/* Input buffering clean-up */
#ifndef UNICC_CLEARIN
#define UNICC_CLEARIN( parser )	parser->clear_input()
#endif

/*TODO:*/
#ifndef UNICC_NO_INPUT_BUFFER
#define UNICC_NO_INPUT_BUFFER	0
#endif

/* Memory allocation step size for dynamic stack- and buffer allocation */
#ifndef UNICC_MALLOCSTEP
#define UNICC_MALLOCSTEP		128
#endif

/* Call this when running out of memory during memory allocation */
#ifndef UNICC_OUTOFMEM
#define UNICC_OUTOFMEM( parser )	fprintf( stderr, \
										"Fatal error, ran out of memory\n" ), \
									exit( 1 )
#endif

#ifdef UNICC_PARSER
#undef UNICC_PARSER
#endif
#define UNICC_PARSER			"" "debug"

/* Don't change next three defines below! */
#ifndef UNICC_ERROR
#define UNICC_ERROR				0
#endif
#ifndef UNICC_REDUCE
#define UNICC_REDUCE			1
#endif
#ifndef UNICC_SHIFT
#define UNICC_SHIFT				2
#endif
#ifndef UNICC_SUCCESS
#define UNICC_SUCCESS			4
#endif

/* Error delay after recovery */
#ifndef UNICC_ERROR_DELAY
#define UNICC_ERROR_DELAY		3
#endif

/* Enable/Disable terminal selection in semantic actions */
#ifndef UNICC_SEMANTIC_TERM_SEL
#define UNICC_SEMANTIC_TERM_SEL	0
#endif

#define UNICC_GETINPUT             (this->char_fetcher.get_char())

/* Value Types */
typedef int _vtype;

/* Typedef for symbol information table */
typedef struct
{
	const char*	name;
	const char*	emit;
	short		type;
	bool		lexem;
	bool		whitespace;
	bool		greedy;
} _syminfo;

/* Typedef for production information table */
typedef struct
{
	const char*	definition;
	const char*	emit;
	int			length;
	int			lhs;
} _prodinfo;


/* Abstract Syntax Tree */
typedef struct _AST _ast;

struct _AST
{
	const char*		emit;
	UNICC_SCHAR*	token;

	_ast*	parent;
	_ast*	child;
	_ast*	prev;
	_ast*	next;
};

/* Stack Token */
typedef struct
{
	_vtype		value;
	_ast*		node;

	const
	_syminfo*	symbol;

	int					state;

	size_t				line;
	size_t				column;
} _tok;

class _CharFetcher
{
public:
	_CharFetcher()
	{
		buffer = std::string();
	}
	void clear()
	{
		buffer.clear();
		pointer = -1;
	}
	
	inline void fill(char* str)
	{
		pointer = 0;
		buffer.append(str);
		if (buffer.length() == 0 || buffer[buffer.length()-1] != '\n')
		{
			buffer.push_back('\n');
		}
	}

	inline void fill(std::string& str)
	{
		return this->fill((char*)str.c_str());
	}
	inline UNICC_CHAR fetch()
	{
		if (pointer >= buffer.length())
		{
			return EOF;
		}
		auto ch = *(buffer.c_str() + pointer);
		pointer ++;
		return ch;
	}
	inline UNICC_CHAR fetch_stdin()
	{
		return getchar();
	}


	inline UNICC_CHAR operator ()()
	{
		return fetch();
	}

	void switch_string_mode()
	{
		this->_getchar = &_CharFetcher::fetch;
	}
	void switch_stdin_mode()
	{
		this->_getchar = &_CharFetcher::fetch_stdin;
	}

	UNICC_CHAR (_CharFetcher::*_getchar)() = nullptr;

	UNICC_CHAR get_char()
	{
		return (this->*_getchar)();
	}
private:
	std::string buffer;
	signed int pointer;
};


// Parser class
class _parser
{
	public:
		_CharFetcher char_fetcher = _CharFetcher();

		// --- Tables ---

		// Action Table
		const int actions[ 176 ][ 23 * 3 + 1 ] =
		{
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 11,2,5  },
			{ 1, 0,3,206  },
			{ 9, 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 6,2,24 , 3,2,25  },
			{ 1, 58,3,207  },
			{ 1, 31,2,30  },
			{ 3, 54,1,13 , 53,1,19 , 52,1,28  },
			{ 3, 54,1,14 , 53,1,20 , 52,1,29  },
			{ 1, 55,2,32  },
			{ 1, 54,2,34  },
			{ 1, 53,2,36  },
			{ 1, 52,2,38  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 49,2,14  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 23, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 25,2,57 , 24,2,58 , 23,2,59 , 22,2,60 , 21,2,61 , 20,2,62 , 19,2,63 , 18,2,64 , 17,2,65 , 16,2,21 , 15,2,22 , 14,2,23 , 13,2,66 , 12,2,67 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 2, 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 57,2,69  },
			{ 1, 58,3,207  },
			{ 1, 1,2,70  },
			{ 1, 58,3,207  },
			{ 4, 9,2,74 , 7,2,75 , 5,2,76 , 4,2,77  },
			{ 1, 58,3,207  },
			{ 4, 9,2,74 , 7,2,75 , 5,2,76 , 4,2,77  },
			{ 1, 58,3,207  },
			{ 4, 9,2,74 , 7,2,75 , 5,2,76 , 4,2,77  },
			{ 1, 58,3,207  },
			{ 4, 9,2,74 , 7,2,75 , 5,2,76 , 4,2,77  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 47,2,81  },
			{ 1, 58,3,207  },
			{ 2, 6,2,24 , 3,2,25  },
			{ 2, 6,2,24 , 3,2,25  },
			{ 2, 6,2,24 , 3,2,25  },
			{ 1, 47,2,81  },
			{ 20, 47,2,81 , 46,2,89 , 45,2,90 , 44,2,91 , 43,2,92 , 42,2,93 , 41,2,94 , 40,2,95 , 39,2,96 , 38,2,97 , 37,2,98 , 36,2,99 , 33,2,100 , 25,2,57 , 24,2,58 , 23,2,59 , 22,2,60 , 21,2,61 , 20,2,62 , 19,2,63  },
			{ 2, 47,2,81 , 48,1,42  },
			{ 13, 54,2,34 , 51,2,13 , 49,2,14 , 47,2,81 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 47,2,81  },
			{ 1, 47,2,81  },
			{ 1, 48,2,123  },
			{ 1, 47,2,81  },
			{ 1, 47,2,81  },
			{ 1, 47,2,81  },
			{ 2, 18,2,64 , 17,2,65  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 12, 46,2,89 , 45,2,90 , 44,2,91 , 43,2,92 , 42,2,93 , 41,2,94 , 40,2,95 , 39,2,96 , 38,2,97 , 37,2,98 , 36,2,99 , 33,2,100  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 11,2,5  },
			{ 1, 30,2,129  },
			{ 1, 2,2,131  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 57,2,69  },
			{ 1, 2,2,131  },
			{ 1, 47,2,81  },
			{ 1, 58,3,207  },
			{ 1, 47,2,81  },
			{ 1, 27,2,137  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 47,2,81  },
			{ 1, 26,2,138  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 2, 48,2,123 , 47,2,81  },
			{ 1, 25,2,57  },
			{ 1, 24,2,58  },
			{ 1, 23,2,59  },
			{ 1, 22,2,60  },
			{ 1, 21,2,61  },
			{ 1, 20,2,62  },
			{ 1, 19,2,63  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 47,2,81  },
			{ 1, 48,2,123  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 58,3,207  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 58,3,207  },
			{ 1, 1,2,70  },
			{ 1, 58,3,207  },
			{ 1, 56,2,151  },
			{ 1, 8,2,153  },
			{ 1, 47,2,81  },
			{ 1, 48,2,123  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 48,2,123  },
			{ 1, 48,2,123  },
			{ 1, 47,2,81  },
			{ 1, 47,2,81  },
			{ 1, 47,2,81  },
			{ 1, 47,2,81  },
			{ 7, 25,2,57 , 24,2,58 , 23,2,59 , 22,2,60 , 21,2,61 , 20,2,62 , 19,2,63  },
			{ 1, 47,2,81  },
			{ 7, 25,2,57 , 24,2,58 , 23,2,59 , 22,2,60 , 21,2,61 , 20,2,62 , 19,2,63  },
			{ 1, 48,2,123  },
			{ 1, 50,2,166  },
			{ 1, 29,2,167  },
			{ 1, 58,3,207  },
			{ 1, 1,2,70  },
			{ 1, 58,3,207  },
			{ 1, 47,2,81  },
			{ 1, 48,2,123  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 47,2,81  },
			{ 1, 48,2,123  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 2, 48,2,123 , 47,2,81  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 47,2,81  },
			{ 1, 48,2,123  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 12, 54,2,34 , 51,2,13 , 49,2,14 , 32,2,16 , 28,2,17 , 16,2,21 , 15,2,22 , 14,2,23 , 11,2,5 , 10,2,42 , 6,2,24 , 3,2,25  },
			{ 1, 58,3,207  },
			{ 1, 58,3,207  },
			{ 1, 2,2,131  },
			{ 1, 35,2,172  },
			{ 7, 25,2,57 , 24,2,58 , 23,2,59 , 22,2,60 , 21,2,61 , 20,2,62 , 19,2,63  },
			{ 1, 48,2,123  },
			{ 1, 58,3,207  },
			{ 1, 1,2,70  },
			{ 1, 34,2,175  },
			{ 1, 58,3,207  }
		};

		// GoTo Table
		const int go[ 176 ][ 61 * 3 + 1 ] =
		{
			{ 3, 119,3,209 , 118,2,1 , 117,2,2  },
			{ 1, 119,3,208  },
			{ 6, 233,2,3 , 232,3,0 , 231,3,1 , 230,2,4 , 120,3,269 , 103,2,6  },
			{ 0 },
			{ 36, 229,3,3 , 228,2,7 , 227,2,8 , 226,2,9 , 219,2,10 , 216,2,11 , 210,2,12 , 205,3,36 , 204,3,67 , 200,2,15 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 106,2,26 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,225  },
			{ 1, 62,2,31  },
			{ 0 },
			{ 0 },
			{ 1, 116,2,33  },
			{ 1, 115,2,35  },
			{ 1, 114,2,37  },
			{ 1, 113,2,39  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,230  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,222  },
			{ 1, 106,2,40  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,229  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,260  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,41 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,46 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,91 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,259  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,257  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,244  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,227  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,228  },
			{ 61, 228,3,62 , 227,3,66 , 207,2,47 , 205,3,36 , 204,2,48 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,49 , 175,3,93 , 174,2,50 , 170,2,51 , 166,2,52 , 163,2,53 , 160,2,54 , 156,3,121 , 155,2,55 , 152,2,56 , 150,3,132 , 149,3,133 , 148,3,134 , 147,3,135 , 146,3,136 , 145,3,137 , 144,3,138 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 83,3,179 , 82,3,180 , 81,3,173 , 80,3,168 , 79,3,167 , 78,3,170 , 77,3,169 , 76,3,171 , 75,3,172 , 74,3,174 , 73,3,175 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 4, 200,3,68 , 121,3,205 , 101,3,203 , 100,3,204  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,68 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 1, 111,3,69  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,266  },
			{ 3, 123,3,201 , 122,2,71 , 65,2,72  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,212  },
			{ 7, 225,3,7 , 224,3,8 , 223,2,73 , 112,2,78 , 109,3,185 , 108,3,186 , 107,3,187  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,213  },
			{ 7, 225,3,16 , 218,3,17 , 217,3,15 , 112,2,78 , 109,3,185 , 108,3,186 , 107,3,187  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,214  },
			{ 7, 225,3,22 , 215,3,23 , 214,2,79 , 112,2,78 , 109,3,185 , 108,3,186 , 107,3,187  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,215  },
			{ 7, 225,3,31 , 209,3,32 , 208,3,30 , 112,2,78 , 109,3,185 , 108,3,186 , 107,3,187  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,80 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 4, 183,3,82 , 182,2,82 , 181,2,83 , 104,2,84  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,226  },
			{ 4, 200,3,183 , 121,3,205 , 101,3,203 , 100,3,204  },
			{ 4, 200,3,181 , 121,3,205 , 101,3,203 , 100,3,204  },
			{ 4, 200,3,182 , 121,3,205 , 101,3,203 , 100,3,204  },
			{ 4, 179,3,88 , 178,2,85 , 177,2,86 , 104,2,87  },
			{ 37, 206,2,88 , 165,3,110 , 164,2,101 , 143,3,142 , 142,2,102 , 141,3,146 , 140,2,103 , 139,3,150 , 138,2,104 , 137,3,154 , 136,2,105 , 135,3,158 , 134,2,106 , 133,3,162 , 132,2,107 , 131,3,166 , 130,2,108 , 104,2,109 , 96,3,49 , 95,3,50 , 94,3,51 , 93,3,52 , 92,3,53 , 91,3,54 , 90,3,55 , 89,3,56 , 88,3,57 , 87,3,58 , 86,3,59 , 85,3,60 , 81,2,110 , 80,2,111 , 79,2,112 , 78,2,113 , 77,2,114 , 76,2,115 , 75,2,116  },
			{ 4, 203,3,40 , 202,2,117 , 201,2,118 , 104,2,119  },
			{ 37, 228,3,62 , 227,3,66 , 207,3,91 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 104,2,120 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 1, 104,2,121  },
			{ 1, 104,2,122  },
			{ 1, 105,3,106  },
			{ 1, 104,2,124  },
			{ 1, 104,2,125  },
			{ 1, 104,2,126  },
			{ 3, 155,2,127 , 74,3,174 , 73,3,175  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,247  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,248  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,249  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,250  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,251  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,252  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,253  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,254  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,255  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,245  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,246  },
			{ 13, 206,2,128 , 96,3,49 , 95,3,50 , 94,3,51 , 93,3,52 , 92,3,53 , 91,3,54 , 90,3,55 , 89,3,56 , 88,3,57 , 87,3,58 , 86,3,59 , 85,3,60  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,217  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,263  },
			{ 1, 103,3,196  },
			{ 1, 61,2,130  },
			{ 4, 222,3,10 , 221,3,11 , 220,3,6 , 67,2,132  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,216  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,219  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,220  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,221  },
			{ 1, 111,2,133  },
			{ 5, 222,3,188 , 213,3,25 , 212,3,26 , 211,3,21 , 67,2,132  },
			{ 4, 199,3,46 , 198,2,134 , 197,2,135 , 104,2,136  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,224  },
			{ 2, 183,3,81 , 104,2,84  },
			{ 1, 70,3,79  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,80 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 2, 179,3,87 , 104,2,87  },
			{ 1, 72,3,85  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,86 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,139 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,232  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,233  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,234  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,235  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,236  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,237  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,238  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,239  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,240  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,241  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,242  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,243  },
			{ 3, 165,3,109 , 105,3,107 , 104,2,109  },
			{ 2, 143,3,141 , 81,2,110  },
			{ 2, 141,3,145 , 80,2,111  },
			{ 2, 139,3,149 , 79,2,112  },
			{ 2, 137,3,153 , 78,2,113  },
			{ 2, 135,3,157 , 77,2,114  },
			{ 2, 133,3,161 , 76,2,115  },
			{ 2, 131,3,165 , 75,2,116  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,108 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,140 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,144 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,148 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,152 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,156 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,160 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,164 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 2, 203,3,39 , 104,2,119  },
			{ 1, 105,3,37  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,38 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,140 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,141 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,142 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,223  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,143 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,144 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 45, 228,3,62 , 227,3,66 , 207,2,145 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 166,3,124 , 156,3,121 , 154,2,146 , 150,3,132 , 149,3,133 , 148,3,134 , 147,3,135 , 146,3,136 , 145,3,137 , 144,3,138 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 45, 228,3,62 , 227,3,66 , 207,2,147 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 166,3,131 , 156,3,121 , 151,2,148 , 150,3,132 , 149,3,133 , 148,3,134 , 147,3,135 , 146,3,136 , 145,3,137 , 144,3,138 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 36, 228,3,62 , 227,3,66 , 207,2,149 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,267  },
			{ 3, 125,3,199 , 124,3,197 , 65,2,150  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,261  },
			{ 1, 66,2,152  },
			{ 1, 110,3,184  },
			{ 2, 199,3,45 , 104,2,136  },
			{ 1, 105,3,43  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,44 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,258  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,256  },
			{ 1, 105,3,35  },
			{ 1, 105,3,92  },
			{ 4, 173,3,97 , 172,2,154 , 171,2,155 , 104,2,156  },
			{ 4, 169,3,103 , 168,2,157 , 167,2,158 , 104,2,159  },
			{ 3, 162,3,114 , 161,2,160 , 104,2,161  },
			{ 4, 159,3,118 , 158,2,162 , 157,2,163 , 104,2,164  },
			{ 21, 143,3,142 , 142,2,102 , 141,3,146 , 140,2,103 , 139,3,150 , 138,2,104 , 137,3,154 , 136,2,105 , 135,3,158 , 134,2,106 , 133,3,162 , 132,2,107 , 131,3,166 , 130,2,108 , 81,2,110 , 80,2,111 , 79,2,112 , 78,2,113 , 77,2,114 , 76,2,115 , 75,2,116  },
			{ 1, 104,2,165  },
			{ 21, 143,3,142 , 142,2,102 , 141,3,146 , 140,2,103 , 139,3,150 , 138,2,104 , 137,3,154 , 136,2,105 , 135,3,158 , 134,2,106 , 133,3,162 , 132,2,107 , 131,3,166 , 130,2,108 , 81,2,110 , 80,2,111 , 79,2,112 , 78,2,113 , 77,2,114 , 76,2,115 , 75,2,116  },
			{ 1, 105,3,127  },
			{ 1, 97,3,34  },
			{ 1, 60,3,198  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,262  },
			{ 3, 127,3,194 , 126,2,168 , 65,2,169  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,218  },
			{ 2, 173,3,96 , 104,2,156  },
			{ 1, 105,3,94  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,95 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 2, 169,3,102 , 104,2,159  },
			{ 1, 105,3,100  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,101 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 162,3,113 , 105,3,111 , 104,2,161  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,112 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 2, 159,3,117 , 104,2,164  },
			{ 1, 105,3,115  },
			{ 36, 228,3,62 , 227,3,66 , 207,3,116 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 156,3,121 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 45, 228,3,62 , 227,3,66 , 207,2,170 , 205,3,36 , 204,3,67 , 200,2,15 , 196,3,61 , 195,3,63 , 194,3,65 , 193,3,70 , 192,3,71 , 191,3,72 , 190,3,73 , 189,3,74 , 188,3,75 , 187,3,76 , 186,3,77 , 185,3,78 , 184,2,18 , 180,2,19 , 176,2,20 , 175,3,93 , 166,3,126 , 156,3,121 , 153,2,171 , 150,3,132 , 149,3,133 , 148,3,134 , 147,3,135 , 146,3,136 , 145,3,137 , 144,3,138 , 121,3,205 , 115,2,43 , 106,2,26 , 103,2,44 , 102,2,45 , 101,3,203 , 100,3,204 , 99,2,27 , 98,2,28 , 84,3,178 , 71,3,177 , 69,3,176 , 68,2,29  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,231  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,268  },
			{ 1, 67,3,189  },
			{ 1, 64,2,173  },
			{ 21, 143,3,142 , 142,2,102 , 141,3,146 , 140,2,103 , 139,3,150 , 138,2,104 , 137,3,154 , 136,2,105 , 135,3,158 , 134,2,106 , 133,3,162 , 132,2,107 , 131,3,166 , 130,2,108 , 81,2,110 , 80,2,111 , 79,2,112 , 78,2,113 , 77,2,114 , 76,2,115 , 75,2,116  },
			{ 1, 105,3,122  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,264  },
			{ 3, 129,3,192 , 128,3,190 , 65,2,174  },
			{ 1, 63,3,191  },
			{ 3, 119,3,209 , 118,2,1 , 117,3,265  }
		};

		// Default productions per state
		const int def_prod[ 176 ] =
		{
			211, 210, 2, -1, -1, 211, -1, 4, 5, -1, -1, -1, -1, 211, 211, 64, 211, 211, -1, -1, -1, 211, 211, 211, 211, 211, -1, -1, -1, -1, 211, 202, 211, 9, 211, 18, 211, 24, 211, 33, -1, 84, 211, -1, -1, -1, 90, 128, 67, -1, -1, -1, 129, -1, -1, -1, -1, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, -1, 211, 211, -1, -1, 12, 211, 211, 211, 211, -1, 27, 48, 211, 83, -1, -1, 89, -1, -1, -1, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, 211, -1, 139, 143, 147, 151, 155, 159, 163, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, 211, -1, -1, -1, -1, -1, 211, 200, 211, -1, -1, 47, -1, -1, 211, 211, -1, -1, 99, 105, -1, 120, 123, -1, 130, -1, -1, -1, 211, 195, 211, 98, -1, -1, 104, -1, -1, -1, -1, 119, -1, -1, -1, 211, 211, -1, -1, 125, -1, 211, 193, -1, 211
		};

		#if !0
		// DFA selection table
		const int dfa_select[ 176 ] =
		{
			0, 1, 2, -1, 3, 4, 5, 6, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16, 16, 11, 11, 17, 18, 18, 19, 20, 16, 21, 22, 23, 24, 25, 26, 27, 24, 25, 28, 27, 16, 29, 14, 20, 20, 20, 30, 31, 32, 33, 34, 34, 35, 34, 34, 34, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 39, 40, 41, 42, 43, 44, 15, 45, 45, 45, 21, 44, 46, 11, 29, 47, 16, 30, 48, 16, 16, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 46, 49, 50, 51, 52, 53, 54, 55, 16, 16, 16, 16, 16, 16, 16, 16, 46, 56, 16, 16, 16, 16, 57, 16, 16, 16, 16, 16, 22, 23, 58, 59, 60, 46, 56, 16, 57, 57, 56, 56, 46, 46, 34, 46, 61, 34, 62, 56, 63, 64, 65, 66, 45, 46, 56, 16, 46, 56, 16, 46, 16, 46, 56, 16, 16, 57, 67, 44, 68, 62, 56, 65, 66, 69, 45
		};
		#endif

		#if 70
		// DFA index table
		const int dfa_idx[ 70 ][ 80 ] =
		{
			{ 0 * 2, 19 * 2, 20 * 2, 21 * 2, 22 * 2, 23 * 2, 24 * 2, 25 * 2, 26 * 2, 33 * 2, 34 * 2, 35 * 2, 36 * 2, 41 * 2, 43 * 2, 49 * 2, 52 * 2 },
			{ 57 * 2, 98 * 2, 99 * 2, 100 * 2, 101 * 2, 102 * 2, 103 * 2, 104 * 2, 105 * 2, 106 * 2, 107 * 2, 108 * 2, 110 * 2, 114 * 2, 115 * 2, 116 * 2, 117 * 2, 118 * 2, 119 * 2, 120 * 2, 122 * 2, 127 * 2, 128 * 2, 129 * 2, 130 * 2, 135 * 2, 136 * 2, 139 * 2, 148 * 2, 151 * 2, 152 * 2, 153 * 2, 154 * 2, 155 * 2, 156 * 2, 157 * 2, 158 * 2, 160 * 2, 163 * 2, 165 * 2, 166 * 2, 167 * 2, 168 * 2, 169 * 2, 170 * 2, 171 * 2, 172 * 2, 173 * 2, 174 * 2, 175 * 2, 176 * 2, 177 * 2, 178 * 2, 179 * 2, 180 * 2, 185 * 2, 193 * 2, 196 * 2, 201 * 2, 209 * 2, 211 * 2, 217 * 2, 224 * 2, 227 * 2, 234 * 2, 236 * 2, 244 * 2, 246 * 2, 248 * 2, 250 * 2, 252 * 2, 254 * 2, 256 * 2, 258 * 2, 260 * 2, 262 * 2, 264 * 2, 267 * 2, 270 * 2, 275 * 2 },
			{ 278 * 2, 294 * 2, 295 * 2, 296 * 2, 297 * 2, 298 * 2, 299 * 2, 300 * 2, 307 * 2, 308 * 2, 309 * 2, 310 * 2, 312 * 2, 317 * 2, 323 * 2, 326 * 2 },
			{ 331 * 2, 346 * 2, 347 * 2, 348 * 2, 349 * 2, 356 * 2, 357 * 2, 358 * 2, 359 * 2, 360 * 2, 361 * 2, 363 * 2, 368 * 2, 374 * 2, 377 * 2 },
			{ 382 * 2, 403 * 2, 404 * 2, 405 * 2, 406 * 2, 407 * 2, 408 * 2, 409 * 2, 417 * 2, 418 * 2, 419 * 2, 420 * 2, 422 * 2, 427 * 2, 435 * 2, 437 * 2, 439 * 2, 446 * 2, 448 * 2, 454 * 2, 457 * 2 },
			{ 462 * 2, 466 * 2, 468 * 2, 470 * 2, 472 * 2, 474 * 2 },
			{ 476 * 2, 481 * 2, 482 * 2, 483 * 2, 484 * 2 },
			{ 485 * 2, 487 * 2 },
			{ 488 * 2, 490 * 2 },
			{ 491 * 2, 493 * 2 },
			{ 494 * 2, 496 * 2 },
			{ 497 * 2, 518 * 2, 519 * 2, 520 * 2, 521 * 2, 522 * 2, 523 * 2, 524 * 2, 525 * 2, 526 * 2, 527 * 2, 534 * 2, 535 * 2, 536 * 2, 537 * 2, 542 * 2, 544 * 2, 550 * 2, 553 * 2 },
			{ 558 * 2, 585 * 2, 586 * 2, 587 * 2, 588 * 2, 589 * 2, 590 * 2, 591 * 2, 592 * 2, 593 * 2, 594 * 2, 596 * 2, 597 * 2, 598 * 2, 599 * 2, 601 * 2, 605 * 2, 606 * 2, 613 * 2, 614 * 2, 615 * 2, 616 * 2, 617 * 2, 618 * 2, 619 * 2, 620 * 2, 625 * 2, 631 * 2, 634 * 2 },
			{ 639 * 2, 658 * 2, 659 * 2, 660 * 2, 661 * 2, 662 * 2, 663 * 2, 664 * 2, 666 * 2, 667 * 2, 669 * 2, 670 * 2, 671 * 2, 672 * 2, 673 * 2, 677 * 2, 678 * 2, 679 * 2, 680 * 2, 681 * 2, 682 * 2, 683 * 2, 684 * 2, 685 * 2, 686 * 2, 687 * 2, 688 * 2, 689 * 2, 690 * 2, 691 * 2, 692 * 2, 693 * 2, 694 * 2, 696 * 2, 701 * 2, 706 * 2, 709 * 2, 711 * 2, 713 * 2, 715 * 2, 717 * 2, 719 * 2, 721 * 2, 723 * 2, 725 * 2 },
			{ 728 * 2, 739 * 2, 746 * 2, 747 * 2, 748 * 2, 753 * 2, 759 * 2, 762 * 2 },
			{ 767 * 2, 772 * 2, 774 * 2, 775 * 2 },
			{ 777 * 2, 795 * 2, 796 * 2, 797 * 2, 798 * 2, 805 * 2, 806 * 2, 807 * 2, 808 * 2, 809 * 2, 810 * 2, 811 * 2, 812 * 2, 813 * 2, 815 * 2, 820 * 2, 826 * 2, 829 * 2 },
			{ 834 * 2, 856 * 2, 857 * 2, 858 * 2, 859 * 2, 860 * 2, 861 * 2, 862 * 2, 863 * 2, 864 * 2, 865 * 2, 866 * 2, 873 * 2, 874 * 2, 875 * 2, 876 * 2, 881 * 2, 883 * 2, 889 * 2, 892 * 2 },
			{ 897 * 2, 918 * 2, 919 * 2, 920 * 2, 921 * 2, 922 * 2, 923 * 2, 924 * 2, 925 * 2, 926 * 2, 928 * 2, 929 * 2, 931 * 2, 935 * 2, 936 * 2, 937 * 2, 938 * 2, 939 * 2, 940 * 2, 941 * 2, 942 * 2, 943 * 2, 944 * 2, 945 * 2, 946 * 2, 947 * 2, 948 * 2, 949 * 2, 950 * 2, 951 * 2, 952 * 2, 953 * 2, 954 * 2, 955 * 2, 957 * 2, 962 * 2, 967 * 2, 970 * 2, 972 * 2, 974 * 2, 976 * 2, 978 * 2, 980 * 2, 982 * 2, 984 * 2, 986 * 2 },
			{ 989 * 2, 1013 * 2, 1014 * 2, 1016 * 2, 1017 * 2, 1018 * 2, 1019 * 2, 1020 * 2, 1027 * 2, 1028 * 2, 1029 * 2, 1030 * 2, 1032 * 2, 1033 * 2, 1034 * 2, 1035 * 2, 1039 * 2, 1040 * 2, 1041 * 2, 1042 * 2, 1043 * 2, 1044 * 2, 1045 * 2, 1046 * 2, 1047 * 2, 1052 * 2, 1058 * 2, 1061 * 2 },
			{ 1066 * 2, 1074 * 2, 1081 * 2, 1082 * 2, 1087 * 2, 1093 * 2, 1096 * 2 },
			{ 1101 * 2, 1104 * 2, 1106 * 2 },
			{ 1108 * 2, 1113 * 2, 1114 * 2, 1115 * 2 },
			{ 1116 * 2, 1119 * 2, 1120 * 2 },
			{ 1121 * 2, 1126 * 2, 1127 * 2, 1128 * 2, 1129 * 2, 1130 * 2, 1131 * 2, 1132 * 2, 1137 * 2, 1139 * 2, 1141 * 2 },
			{ 1143 * 2, 1146 * 2, 1147 * 2, 1148 * 2, 1149 * 2, 1150 * 2, 1151 * 2, 1156 * 2, 1158 * 2, 1160 * 2 },
			{ 1162 * 2, 1174 * 2, 1181 * 2, 1182 * 2, 1183 * 2, 1184 * 2, 1185 * 2, 1186 * 2, 1187 * 2, 1192 * 2, 1197 * 2, 1199 * 2, 1201 * 2, 1203 * 2, 1209 * 2, 1212 * 2 },
			{ 1217 * 2, 1219 * 2, 1220 * 2, 1221 * 2, 1222 * 2, 1223 * 2, 1228 * 2, 1230 * 2, 1232 * 2 },
			{ 1234 * 2, 1238 * 2, 1239 * 2, 1240 * 2, 1241 * 2, 1242 * 2, 1243 * 2, 1248 * 2, 1250 * 2, 1252 * 2 },
			{ 1254 * 2, 1257 * 2, 1258 * 2 },
			{ 1259 * 2, 1262 * 2, 1263 * 2 },
			{ 1264 * 2, 1274 * 2, 1276 * 2, 1278 * 2, 1279 * 2, 1280 * 2, 1281 * 2, 1285 * 2, 1286 * 2, 1287 * 2, 1288 * 2, 1289 * 2, 1290 * 2, 1291 * 2, 1292 * 2, 1293 * 2, 1294 * 2, 1295 * 2, 1296 * 2, 1297 * 2, 1298 * 2, 1299 * 2, 1300 * 2, 1301 * 2, 1303 * 2, 1308 * 2, 1313 * 2, 1316 * 2, 1318 * 2, 1320 * 2, 1322 * 2, 1324 * 2, 1326 * 2, 1328 * 2, 1330 * 2, 1332 * 2 },
			{ 1335 * 2, 1346 * 2, 1348 * 2, 1349 * 2, 1351 * 2, 1352 * 2, 1353 * 2, 1354 * 2, 1358 * 2, 1359 * 2, 1360 * 2, 1361 * 2, 1362 * 2, 1363 * 2, 1364 * 2, 1365 * 2, 1366 * 2, 1367 * 2, 1368 * 2, 1369 * 2, 1370 * 2, 1371 * 2, 1372 * 2, 1373 * 2, 1374 * 2, 1376 * 2, 1381 * 2, 1386 * 2, 1389 * 2, 1391 * 2, 1393 * 2, 1395 * 2, 1397 * 2, 1399 * 2, 1401 * 2, 1403 * 2, 1405 * 2 },
			{ 1408 * 2, 1427 * 2, 1428 * 2, 1429 * 2, 1430 * 2, 1437 * 2, 1438 * 2, 1439 * 2, 1440 * 2, 1441 * 2, 1442 * 2, 1443 * 2, 1444 * 2, 1445 * 2, 1446 * 2, 1448 * 2, 1453 * 2, 1459 * 2, 1462 * 2 },
			{ 1467 * 2, 1469 * 2 },
			{ 1470 * 2, 1474 * 2, 1475 * 2, 1476 * 2 },
			{ 1477 * 2, 1480 * 2, 1481 * 2 },
			{ 1482 * 2, 1504 * 2, 1505 * 2, 1506 * 2, 1507 * 2, 1508 * 2, 1509 * 2, 1510 * 2, 1511 * 2, 1512 * 2, 1513 * 2, 1514 * 2, 1521 * 2, 1522 * 2, 1523 * 2, 1524 * 2, 1529 * 2, 1531 * 2, 1537 * 2, 1540 * 2 },
			{ 1545 * 2, 1549 * 2, 1550 * 2 },
			{ 1551 * 2, 1556 * 2, 1557 * 2, 1558 * 2, 1559 * 2, 1560 * 2, 1561 * 2, 1562 * 2, 1563 * 2, 1564 * 2, 1565 * 2, 1566 * 2, 1567 * 2, 1568 * 2, 1570 * 2, 1575 * 2, 1580 * 2, 1583 * 2, 1585 * 2, 1587 * 2, 1589 * 2, 1591 * 2, 1593 * 2, 1595 * 2, 1597 * 2, 1599 * 2, 1602 * 2 },
			{ 1604 * 2, 1625 * 2, 1626 * 2, 1627 * 2, 1628 * 2, 1629 * 2, 1630 * 2, 1631 * 2, 1632 * 2, 1634 * 2, 1635 * 2, 1637 * 2, 1641 * 2, 1642 * 2, 1643 * 2, 1644 * 2, 1645 * 2, 1646 * 2, 1647 * 2, 1648 * 2, 1649 * 2, 1650 * 2, 1651 * 2, 1652 * 2, 1653 * 2, 1654 * 2, 1655 * 2, 1656 * 2, 1657 * 2, 1658 * 2, 1659 * 2, 1660 * 2, 1661 * 2, 1662 * 2, 1664 * 2, 1669 * 2, 1674 * 2, 1677 * 2, 1679 * 2, 1681 * 2, 1683 * 2, 1685 * 2, 1687 * 2, 1689 * 2, 1691 * 2, 1693 * 2 },
			{ 1696 * 2, 1703 * 2, 1707 * 2, 1710 * 2, 1711 * 2, 1714 * 2, 1716 * 2, 1718 * 2, 1720 * 2, 1723 * 2, 1725 * 2 },
			{ 1728 * 2, 1730 * 2 },
			{ 1731 * 2, 1734 * 2, 1737 * 2, 1739 * 2, 1741 * 2 },
			{ 1744 * 2, 1746 * 2 },
			{ 1747 * 2, 1751 * 2, 1752 * 2 },
			{ 1753 * 2, 1756 * 2, 1757 * 2 },
			{ 1758 * 2, 1760 * 2 },
			{ 1761 * 2, 1763 * 2 },
			{ 1764 * 2, 1770 * 2, 1771 * 2, 1772 * 2, 1773 * 2, 1774 * 2 },
			{ 1775 * 2, 1781 * 2, 1782 * 2, 1783 * 2, 1784 * 2, 1785 * 2, 1786 * 2 },
			{ 1788 * 2, 1794 * 2, 1795 * 2, 1796 * 2, 1797 * 2, 1798 * 2, 1799 * 2 },
			{ 1801 * 2, 1807 * 2, 1808 * 2, 1809 * 2, 1810 * 2, 1811 * 2, 1812 * 2 },
			{ 1814 * 2, 1820 * 2, 1821 * 2, 1822 * 2, 1823 * 2, 1824 * 2, 1825 * 2 },
			{ 1827 * 2, 1833 * 2, 1834 * 2, 1835 * 2, 1836 * 2, 1837 * 2 },
			{ 1838 * 2, 1844 * 2, 1845 * 2, 1846 * 2, 1847 * 2, 1848 * 2 },
			{ 1849 * 2, 1851 * 2 },
			{ 1852 * 2, 1872 * 2, 1873 * 2, 1874 * 2, 1875 * 2, 1876 * 2, 1877 * 2, 1878 * 2, 1879 * 2, 1881 * 2, 1882 * 2, 1884 * 2, 1888 * 2, 1889 * 2, 1890 * 2, 1891 * 2, 1892 * 2, 1893 * 2, 1894 * 2, 1895 * 2, 1896 * 2, 1897 * 2, 1898 * 2, 1899 * 2, 1900 * 2, 1901 * 2, 1902 * 2, 1903 * 2, 1904 * 2, 1905 * 2, 1906 * 2, 1907 * 2, 1908 * 2, 1910 * 2, 1915 * 2, 1920 * 2, 1923 * 2, 1925 * 2, 1927 * 2, 1929 * 2, 1931 * 2, 1933 * 2, 1935 * 2, 1937 * 2, 1939 * 2 },
			{ 1942 * 2, 1948 * 2, 1950 * 2, 1951 * 2, 1953 * 2, 1955 * 2, 1957 * 2 },
			{ 1959 * 2, 1963 * 2, 1965 * 2, 1967 * 2, 1969 * 2, 1971 * 2 },
			{ 1973 * 2, 1975 * 2 },
			{ 1976 * 2, 1981 * 2, 1983 * 2, 1984 * 2, 1985 * 2, 1989 * 2, 1990 * 2, 1991 * 2, 1992 * 2 },
			{ 1993 * 2, 1998 * 2, 2000 * 2, 2001 * 2, 2002 * 2, 2006 * 2, 2007 * 2, 2008 * 2, 2009 * 2 },
			{ 2010 * 2, 2012 * 2 },
			{ 2013 * 2, 2017 * 2, 2019 * 2, 2021 * 2, 2023 * 2, 2025 * 2 },
			{ 2027 * 2, 2032 * 2, 2033 * 2, 2034 * 2 },
			{ 2035 * 2, 2038 * 2, 2039 * 2 },
			{ 2040 * 2, 2044 * 2, 2045 * 2 },
			{ 2046 * 2, 2049 * 2, 2052 * 2, 2054 * 2, 2056 * 2 },
			{ 2059 * 2, 2061 * 2, 2064 * 2 }
		};

		// DFA transition chars
		const int dfa_chars[ 2066 * 2 ] =
		{
			94, 94, 91, 91, 123, 123, 0, 8, 10, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 60, 60, 45, 45, 43, 43, 40, 40, 36, 36, 34, 34, 32, 32, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 45, 45, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 126, 126, 124, 124, 125, 125, 123, 123, 0, 8, 10, 31, 39, 39, 65, 90, 95, 122, 127, 65535, 94, 94, 93, 93, 92, 92, 91, 91, 64, 64, 63, 63, 62, 62, 61, 61, 60, 60, 59, 59, 58, 58, 50, 57, 49, 49, 48, 48, 47, 47, 46, 46, 45, 45, 44, 44, 43, 43, 42, 42, 41, 41, 40, 40, 38, 38, 37, 37, 36, 36, 35, 35, 34, 34, 33, 33, 32, 32, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 92, 92, 47, 47, 33, 33, -1, -1, -1, -1, 48, 57, 45, 45, -1, -1, 49, 57, 0, 31, 39, 39, 65, 90, 95, 122, 127, 65535, 48, 48, 46, 46, -1, -1, 49, 57, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 57, -1, -1, 93, 93, 62, 62, -1, -1, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 31, 39, 39, 65, 90, 95, 122, 127, 65535, 48, 57, 46, 46, -1, -1, 49, 57, 48, 48, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 0, 31, 39, 39, 65, 90, 95, 122, 127, 65535, 49, 57, 48, 48, -1, -1, 48, 57, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, 93, 93, 45, 45, -1, -1, 0, 31, 39, 39, 65, 90, 95, 122, 127, 65535, 48, 57, -1, -1, 62, 62, -1, -1, 0, 31, 39, 39, 65, 90, 95, 122, 127, 65535, 49, 57, 48, 48, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 49, 57, 48, 48, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 49, 57, 48, 48, -1, -1, 94, 94, 91, 91, 123, 123, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 60, 60, 45, 45, 43, 43, 40, 40, 36, 36, 34, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 123, 123, 94, 94, 91, 91, 60, 60, 45, 45, 43, 43, 40, 40, 34, 34, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 60, 60, 94, 94, 91, 91, 123, 123, 45, 45, 48, 48, 49, 49, 46, 46, 0, 8, 10, 31, 39, 39, 50, 57, 65, 90, 95, 122, 127, 65535, 43, 43, 40, 40, 34, 34, 32, 32, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 46, 46, -1, -1, 48, 57, -1, -1, 45, 45, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, 48, 57, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 49, 49, 48, 48, 46, 46, -1, -1, 46, 46, -1, -1, 48, 57, -1, -1, 46, 46, -1, -1, 48, 48, -1, -1, 48, 57, -1, -1, 64, 64, 63, 63, 46, 46, 33, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 46, -1, -1, -1, -1, 63, 63, -1, -1, -1, -1, 33, 33, -1, -1, -1, -1, 64, 64, -1, -1, -1, -1, 94, 94, 91, 91, 123, 123, 0, 8, 10, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 63, 63, 60, 60, 45, 45, 43, 43, 40, 40, 36, 36, 35, 35, 34, 34, 32, 32, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 45, 45, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 126, 126, 124, 124, 0, 8, 10, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 123, 123, 94, 94, 92, 92, 91, 91, 63, 63, 60, 60, 47, 47, 45, 45, 43, 43, 42, 42, 40, 40, 38, 38, 36, 36, 35, 35, 34, 34, 32, 32, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 64, 64, 93, 93, 125, 125, 123, 123, 126, 126, 124, 124, 63, 63, 62, 62, 61, 61, 60, 60, 46, 46, 45, 45, 44, 44, 42, 42, 41, 41, 40, 40, 38, 38, 33, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, -1, -1, 124, 124, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, 93, 93, 45, 45, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 93, 93, 62, 62, -1, -1, 34, 34, 32, 32, 9, 9, 0, 8, 10, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 9, 9, 32, 32, 48, 57, 45, 45, -1, -1, 48, 57, -1, -1, -1, -1, 48, 57, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 123, 123, 94, 94, 91, 91, 63, 63, 60, 60, 45, 45, 43, 43, 40, 40, 36, 36, 35, 35, 34, 34, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 94, 94, 91, 91, 123, 123, 0, 8, 10, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 63, 63, 60, 60, 45, 45, 44, 44, 43, 43, 40, 40, 36, 36, 35, 35, 34, 34, 32, 32, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 45, 45, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 64, 64, 93, 93, 125, 125, 123, 123, 126, 126, 124, 124, 9, 9, 32, 32, 63, 63, 62, 62, 61, 61, 60, 60, 46, 46, 45, 45, 44, 44, 42, 42, 41, 41, 40, 40, 38, 38, 33, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, -1, -1, 124, 124, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, 93, 93, 45, 45, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 93, 93, 62, 62, -1, -1, 126, 126, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 124, 124, 123, 123, 94, 94, 92, 92, 91, 91, 63, 63, 60, 60, 47, 47, 45, 45, 43, 43, 42, 42, 40, 40, 38, 38, 36, 36, 35, 35, 34, 34, -1, -1, -1, -1, 124, 124, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 34, 34, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 48, 57, 45, 45, -1, -1, 48, 57, -1, -1, 48, 57, -1, -1, 59, 59, 36, 36, 9, 9, 32, 32, -1, -1, -1, -1, -1, -1, -1, -1, 59, 59, 36, 36, -1, -1, -1, -1, -1, -1, 58, 58, 37, 37, 9, 9, 32, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 92, 92, 47, 47, 33, 33, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, 37, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 92, 92, 47, 47, 33, 33, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, 34, 34, 32, 32, 9, 9, 0, 8, 10, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 92, 92, 47, 47, 33, 33, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 58, 58, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 92, 92, 47, 47, 33, 33, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, 9, 9, 32, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 92, 92, 47, 47, 33, 33, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 58, 58, -1, -1, 93, 93, 44, 44, -1, -1, -1, -1, -1, -1, 125, 125, 44, 44, -1, -1, -1, -1, -1, -1, 126, 126, 124, 124, 123, 123, 61, 61, 60, 60, 45, 45, 44, 44, 42, 42, 38, 38, -1, -1, 124, 124, -1, -1, 45, 45, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, 93, 93, 45, 45, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 93, 93, 62, 62, -1, -1, 126, 126, 124, 124, 123, 123, 61, 61, 60, 60, 45, 45, 44, 44, 42, 42, 41, 41, 38, 38, -1, -1, 45, 45, -1, -1, -1, -1, 124, 124, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, 93, 93, 45, 45, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 93, 93, 62, 62, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 123, 123, 94, 94, 91, 91, 63, 63, 60, 60, 45, 45, 44, 44, 43, 43, 40, 40, 36, 36, 35, 35, 34, 34, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 44, 44, -1, -1, -1, -1, 126, 126, 45, 45, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, 126, 126, 45, 45, -1, -1, -1, -1, -1, -1, 94, 94, 91, 91, 123, 123, 0, 8, 10, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, 63, 63, 60, 60, 45, 45, 44, 44, 43, 43, 40, 40, 36, 36, 35, 35, 34, 34, 32, 32, 9, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 31, 39, 39, 48, 57, 65, 90, 95, 122, 127, 65535, -1, -1, -1, -1, -1, -1, -1, -1, 34, 34, 0, 33, 35, 91, 93, 65535, -1, -1, 45, 45, -1, -1, 0, 33, 35, 91, 93, 65535, 92, 92, 34, 34, -1, -1, 34, 34, 92, 92, -1, -1, 0, 33, 35, 91, 93, 65535, 34, 34, -1, -1, 44, 44, 9, 9, 32, 32, -1, -1, -1, -1, -1, -1, 123, 123, 61, 61, 60, 60, 45, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, 93, 93, 45, 45, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 93, 93, 62, 62, -1, -1, 45, 45, -1, -1, 64, 64, 93, 93, 125, 125, 123, 123, 126, 126, 124, 124, 9, 9, 32, 32, 63, 63, 62, 62, 61, 61, 60, 60, 58, 58, 46, 46, 45, 45, 44, 44, 42, 42, 41, 41, 38, 38, 33, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, -1, -1, 124, 124, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, 93, 93, 45, 45, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 93, 93, 62, 62, -1, -1, 9, 9, 32, 32, 50, 57, 49, 49, 48, 48, 46, 46, -1, -1, 49, 57, 48, 48, 46, 46, -1, -1, 49, 57, 48, 48, -1, -1, -1, -1, 49, 57, 48, 48, -1, -1, 46, 46, -1, -1, 48, 57, -1, -1, 48, 48, -1, -1, 49, 57, 48, 48, -1, -1, 48, 57, -1, -1, 49, 57, 48, 48, -1, -1, 36, 36, -1, -1, -1, -1, 48, 48, 46, 46, -1, -1, 49, 57, 48, 48, -1, -1, 46, 46, -1, -1, 48, 57, -1, -1, 49, 57, 48, 48, -1, -1, 37, 37, -1, -1, -1, -1, 37, 37, 9, 9, 32, 32, -1, -1, -1, -1, -1, -1, 44, 44, 41, 41, -1, -1, -1, -1, -1, -1, 93, 93, -1, -1, -1, -1, 125, 125, -1, -1, -1, -1, 126, 126, 45, 45, 44, 44, 42, 42, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 126, 126, 124, 124, 45, 45, 44, 44, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, -1, -1, 126, 126, 45, 45, 44, 44, 41, 41, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, 38, -1, -1, 126, 126, 45, 45, 44, 44, 41, 41, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 47, -1, -1, 126, 126, 45, 45, 44, 44, 41, 41, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, -1, -1, 126, 126, 124, 124, 45, 45, 44, 44, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 126, 126, 45, 45, 44, 44, 41, 41, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 41, -1, -1, -1, -1, 64, 64, 93, 93, 125, 125, 123, 123, 126, 126, 124, 124, 9, 9, 32, 32, 63, 63, 62, 62, 61, 61, 60, 60, 46, 46, 45, 45, 44, 44, 42, 42, 41, 41, 38, 38, 33, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, -1, -1, 124, 124, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 45, -1, -1, 124, 124, 92, 92, 61, 61, 47, 47, -1, -1, 124, 124, 61, 61, 47, 47, 45, 45, -1, -1, 93, 93, 45, 45, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 62, 62, -1, -1, 93, 93, 62, 62, -1, -1, 9, 9, 32, 32, 49, 49, 48, 48, 46, 46, -1, -1, 46, 46, -1, -1, -1, -1, 48, 57, -1, -1, 46, 46, -1, -1, 48, 48, -1, -1, 48, 57, -1, -1, 49, 49, 48, 48, 46, 46, -1, -1, 46, 46, -1, -1, 48, 57, -1, -1, 46, 46, -1, -1, 48, 48, -1, -1, 48, 57, -1, -1, 58, 58, -1, -1, -1, -1, 124, 124, 44, 44, 42, 42, 38, 38, -1, -1, 124, 124, -1, -1, -1, -1, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124, 124, 42, 42, 41, 41, 38, 38, -1, -1, 124, 124, -1, -1, -1, -1, -1, -1, 124, 124, 47, 47, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 62, -1, -1, -1, -1, 49, 49, 48, 48, 46, 46, -1, -1, 46, 46, -1, -1, 48, 57, -1, -1, 46, 46, -1, -1, 48, 48, -1, -1, 48, 57, -1, -1, 59, 59, 37, 37, 9, 9, 32, 32, -1, -1, -1, -1, -1, -1, -1, -1, 59, 59, 37, 37, -1, -1, -1, -1, -1, -1, 36, 36, 9, 9, 32, 32, -1, -1, -1, -1, -1, -1, 48, 48, 46, 46, -1, -1, 49, 57, 48, 48, -1, -1, 46, 46, -1, -1, 48, 57, -1, -1, 49, 57, 48, 48, -1, -1, 49, 57, -1, -1, 49, 57, 48, 48, -1, -1, 48, 57, -1, -1
		};

		// DFA transitions
		const int dfa_trans[ 2066 ] =
		{
			4, 6, 7, 8, 8, 8, 8, 8, 8, 8, 3, 13, 1, 2, 5, 12, 9, 8, -1, -1, -1, -1, -1, -1, -1, -1, 8, 8, 8, 8, 8, 8, -1, -1, -1, -1, 10, 14, 14, 14, -1, 11, -1, 14, 14, 14, 15, 10, -1, 16, 16, -1, 14, 14, 14, 10, -1, 8, 11, 18, 19, 61, 61, 61, 61, 61, 61, 3, 17, 10, 5, 15, 7, 25, 57, 20, 22, 24, 58, 27, 55, 9, 28, 26, 16, 1, 13, 21, 2, 12, 23, 4, 6, 54, 14, 29, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, 32, 33, 34, -1, -1, -1, -1, -1, -1, -1, 62, -1, 71, 69, 70, 72, -1, -1, -1, -1, 74, 75, 73, 35, -1, -1, 36, 37, -1, 65, 61, 61, 61, 61, 61, 63, 38, -1, 56, 79, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, 52, 53, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, 60, 60, 60, -1, 61, 61, 61, 61, 61, 63, 76, -1, 56, 59, -1, 64, 66, 67, 68, -1, 61, 61, 61, 61, 61, 65, 63, -1, 59, -1, 60, 60, 60, 77, 30, -1, 61, 61, 61, 61, 61, 61, -1, 39, 40, -1, 61, 61, 61, 61, 61, 63, -1, 41, -1, 61, 61, 61, 61, 61, 58, 63, -1, 42, -1, 43, -1, 44, -1, 45, -1, 46, -1, 47, -1, 48, -1, 49, -1, 50, -1, 51, -1, 56, 79, -1, 78, 78, -1, 60, 60, 60, 30, -1, 56, 79, -1, 4, 5, 6, 7, 7, 7, 7, 7, 7, 3, 11, 1, 2, 8, 12, -1, -1, -1, -1, -1, -1, -1, 7, 7, 7, 7, 7, 7, -1, -1, -1, -1, 9, -1, 10, 13, 13, 13, -1, 13, 13, 13, 14, 10, -1, 15, 15, -1, 13, 13, 13, 10, -1, 4, 4, 4, 4, 4, 4, 3, 1, 2, 5, 10, 6, 7, 11, -1, -1, -1, -1, 4, 4, 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, 8, -1, 9, 12, 12, 12, -1, 12, 12, 12, 13, 9, -1, 14, 14, -1, 12, 12, 12, 9, -1, 3, 4, 5, 6, 15, 7, 13, 17, 16, 16, 16, 16, 16, 16, 16, 1, 2, 12, 8, 16, -1, -1, -1, -1, -1, -1, -1, 16, 16, 16, 16, 16, 16, 17, -1, -1, -1, -1, 11, -1, 9, 18, 18, 18, -1, 16, 16, 16, 16, 16, 16, 11, -1, 14, -1, 10, -1, 16, 16, 16, 16, 16, 16, -1, 14, -1, 18, 18, 18, 19, 9, -1, 20, 20, -1, 18, 18, 18, 9, -1, 1, 3, 2, -1, 4, -1, 5, -1, 2, -1, 4, -1, 5, -1, 2, 1, 3, 4, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 1, -1, -1, 7, 8, 9, 10, 10, 10, 10, 10, 10, 10, 3, 6, 15, 4, 5, 1, 2, 14, 11, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, 10, 10, 10, 10, 10, -1, -1, -1, -1, 12, 16, 16, 16, -1, 13, -1, 16, 16, 16, 17, 12, -1, 18, 18, -1, 16, 16, 16, 12, -1, 11, 14, 17, 17, 17, 17, 17, 17, 17, 9, 1, 13, 8, 4, 7, 12, 10, 5, 16, 6, 15, 2, 3, 25, 18, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, 21, -1, 22, 23, 24, -1, -1, 17, 17, 17, 17, 17, 17, -1, -1, -1, -1, -1, -1, -1, -1, 19, 26, 26, 26, -1, 26, 26, 26, 27, 19, -1, 28, 28, -1, 26, 26, 26, 19, -1, 3, 5, 6, 32, 8, 9, 2, 12, 33, 34, 1, 7, 4, 10, 11, 13, 14, 15, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, 16, -1, -1, -1, -1, -1, 17, 18, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, 36, 37, 38, 39, -1, 42, 40, 41, 43, -1, 20, 21, -1, 22, -1, 23, -1, 24, -1, 25, -1, 26, -1, 27, -1, 28, -1, 29, -1, 30, 31, -1, 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, 3, 5, 5, 5, -1, 5, 5, 5, 6, 3, -1, 7, 7, -1, 5, 5, 5, 3, -1, 2, 2, 1, 3, -1, 1, -1, -1, 1, -1, 4, 4, 4, 4, 4, 4, 3, 1, 2, 5, 6, 13, 7, 8, 9, 10, 14, -1, -1, -1, -1, 4, 4, 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, 12, 15, 15, 15, -1, 15, 15, 15, 16, 12, -1, 17, 17, -1, 15, 15, 15, 12, -1, 7, 8, 9, 11, 11, 11, 11, 11, 11, 11, 3, 6, 16, 10, 4, 5, 1, 2, 15, 12, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 11, 11, 11, 11, 11, -1, -1, -1, -1, 13, 17, 17, 17, -1, 14, -1, 17, 17, 17, 18, 13, -1, 19, 19, -1, 17, 17, 17, 13, -1, 4, 7, 8, 33, 10, 11, 16, 16, 2, 15, 34, 35, 1, 9, 6, 13, 14, 5, 12, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, 17, -1, 18, 19, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, 37, 38, 39, 40, -1, 43, 41, 42, 44, -1, 21, 22, -1, 23, -1, 24, -1, 25, -1, 26, -1, 27, -1, 28, -1, 29, -1, 30, -1, 31, 32, -1, 3, 7, 7, 7, 7, 7, 7, 2, 5, 1, 6, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, -1, -1, 18, -1, -1, -1, -1, -1, 7, 7, 7, 7, 7, 7, -1, -1, -1, -1, 19, -1, -1, -1, -1, 21, 20, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 25, 25, 25, -1, 25, 25, 25, 26, 23, -1, 27, 27, -1, 25, 25, 25, 23, -1, 1, 1, 1, 1, 1, 1, 3, -1, 1, 1, 1, 1, 1, 1, -1, -1, 2, 4, 4, 4, -1, 4, 4, 4, 5, 2, -1, 6, 6, -1, 4, 4, 4, 2, -1, 1, 2, -1, 1, -1, 1, -1, 1, 2, 3, 3, -1, -1, -1, -1, 1, 2, -1, -1, -1, 7, 1, 2, 2, -1, -1, -1, -1, -1, -1, -1, 9, 10, 8, 3, -1, 4, -1, 5, -1, 6, -1, 6, 1, -1, -1, -1, -1, -1, -1, 8, 9, 7, 2, -1, 3, -1, 4, -1, 5, -1, 8, 9, 2, 1, 1, 1, 1, 1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, -1, -1, -1, -1, -1, -1, -1, 11, 12, 10, 3, -1, 4, 13, 13, 13, -1, 5, -1, 6, -1, 7, -1, 13, 13, 13, 14, 4, -1, 15, 15, -1, 13, 13, 13, 4, -1, 5, -1, -1, -1, -1, -1, 7, 8, 6, 1, -1, 2, -1, 3, -1, 4, -1, 6, 1, 1, -1, -1, -1, -1, -1, -1, 8, 9, 7, 2, -1, 3, -1, 4, -1, 5, -1, 1, 2, -1, -1, -1, 1, 2, -1, -1, -1, 3, 1, 23, 24, 25, 2, 4, 5, 6, -1, 7, -1, 35, -1, -1, -1, -1, 9, 8, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, 27, 28, 29, 30, -1, 33, 31, 32, 34, -1, 11, 12, -1, 13, -1, 14, -1, 15, -1, 16, -1, 17, -1, 18, -1, 19, -1, 20, -1, 21, 22, -1, 2, 3, 24, 25, 26, 1, 4, 5, 6, 7, -1, 36, -1, -1, 8, -1, -1, -1, -1, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, 28, 29, 30, 31, -1, 34, 32, 33, 35, -1, 12, 13, -1, 14, -1, 15, -1, 16, -1, 17, -1, 18, -1, 19, -1, 20, -1, 21, -1, 22, 23, -1, 4, 4, 4, 4, 4, 4, 3, 1, 2, 5, 6, 14, 7, 8, 9, 10, 11, 15, -1, -1, -1, -1, 4, 4, 4, 4, 4, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, 13, 16, 16, 16, -1, 16, 16, 16, 17, 13, -1, 18, 18, -1, 16, 16, 16, 13, -1, 1, -1, -1, 2, 1, 3, -1, -1, -1, -1, 1, 2, -1, -1, -1, 8, 9, 10, 11, 11, 11, 11, 11, 11, 11, 4, 7, 16, 1, 5, 6, 2, 3, 15, 12, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, 11, 11, 11, 11, 11, -1, -1, -1, -1, 13, 17, 17, 17, -1, 14, -1, 17, 17, 17, 18, 13, -1, 19, 19, -1, 17, 17, 17, 13, -1, 1, 2, 2, -1, -1, -1, 13, 14, 15, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, 17, 18, 19, 20, -1, 23, 21, 22, 24, -1, 1, 2, -1, 3, -1, 4, -1, 5, -1, 6, -1, 7, -1, 8, -1, 9, -1, 10, -1, 11, 12, -1, 25, -1, 4, 6, 7, 33, 9, 10, 16, 16, 2, 15, 34, 35, 14, 1, 8, 5, 12, 13, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, 45, -1, -1, 17, -1, 18, 19, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, 37, 38, 39, 40, -1, 43, 41, 42, 44, -1, 21, 22, -1, 23, -1, 24, -1, 25, -1, 26, -1, 27, -1, 28, -1, 29, -1, 30, -1, 31, 32, -1, 3, 3, 2, 1, 5, 4, -1, 2, 6, 7, -1, 2, 6, -1, -1, 8, 10, -1, 4, -1, 6, -1, 7, -1, 8, 9, -1, 9, -1, 8, 10, -1, 1, -1, -1, 2, 4, -1, 1, 3, -1, 4, -1, 3, -1, 1, 4, -1, 1, -1, -1, 1, 2, 2, -1, -1, -1, 1, 2, -1, -1, -1, 1, -1, -1, 1, -1, -1, 2, 1, 3, 4, 5, -1, -1, -1, -1, -1, -1, 1, 6, 2, 3, 4, -1, -1, -1, -1, -1, -1, 5, -1, 3, 2, 4, 1, 6, -1, -1, -1, -1, -1, -1, 5, -1, 3, 2, 4, 1, 6, -1, -1, -1, -1, -1, -1, 5, -1, 3, 2, 4, 1, 6, -1, -1, -1, -1, -1, -1, 5, -1, 1, 2, 3, 4, 5, -1, -1, -1, -1, -1, -1, 3, 2, 4, 1, 5, -1, -1, -1, -1, -1, -1, 1, -1, -1, 4, 6, 7, 32, 9, 10, 15, 15, 2, 14, 33, 34, 1, 8, 5, 12, 13, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, 16, -1, 17, 18, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, -1, 36, 37, 38, 39, -1, 42, 40, 41, 43, -1, 20, 21, -1, 22, -1, 23, -1, 24, -1, 25, -1, 26, -1, 27, -1, 28, -1, 29, -1, 30, 31, -1, 2, 2, 4, 1, 3, -1, 3, -1, -1, 6, -1, 5, -1, 5, -1, 6, -1, 1, 3, 2, -1, 4, -1, 5, -1, 2, -1, 4, -1, 5, -1, 1, -1, -1, 1, 2, 3, 4, -1, 5, -1, -1, -1, 7, 6, 8, -1, -1, -1, -1, -1, 1, 2, 3, 4, -1, 5, -1, -1, -1, 7, 6, 8, -1, -1, -1, -1, -1, 1, -1, -1, 1, 3, 2, -1, 4, -1, 5, -1, 2, -1, 4, -1, 5, -1, 1, 2, 3, 3, -1, -1, -1, -1, 1, 2, -1, -1, -1, 1, 2, 2, -1, -1, -1, 2, 4, -1, 1, 3, -1, 4, -1, 3, -1, 1, 4, -1, 1, -1, 1, 2, -1, 2, -1
		};

		// DFA acception states
		const int dfa_accept[ 70 ][ 80 ] =
		{
			{ 0, 29, 50, 52, 33, 12, 17, 16, 4, 59, 7, 15, 0, 0, 0, 0, 0 },
			{ 0, 29, 50, 33, 12, 17, 11, 55, 18, 13, 14, 21, 20, 26, 54, 53, 48, 28, 27, 16, 52, 49, 2, 3, 9, 51, 19, 4, 56, 59, 7, 25, 22, 23, 24, 10, 58, 15, 30, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 8, 6, 5, 44, 47, 0, 4, 30, 0, 4, 30, 0, 4, 0, 4, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30 },
			{ 0, 29, 50, 52, 33, 17, 16, 4, 12, 15, 7, 0, 0, 0, 0, 0 },
			{ 0, 33, 17, 16, 4, 52, 29, 50, 15, 7, 0, 0, 0, 0, 0 },
			{ 0, 29, 50, 52, 33, 17, 16, 4, 59, 7, 15, 32, 0, 4, 32, 0, 4, 0, 0, 0, 0 },
			{ 0, 32, 0, 32, 32, 32 },
			{ 0, 55, 53, 56, 54 },
			{ 0, 56 },
			{ 0, 55 },
			{ 0, 54 },
			{ 0, 53 },
			{ 0, 12, 11, 55, 29, 50, 52, 33, 17, 16, 4, 59, 7, 15, 0, 0, 0, 0, 0 },
			{ 0, 33, 12, 11, 55, 29, 50, 52, 17, 16, 19, 18, 13, 14, 21, 20, 26, 4, 59, 7, 15, 25, 22, 23, 24, 0, 0, 0, 0 },
			{ 0, 56, 55, 53, 48, 28, 27, 19, 18, 21, 26, 49, 51, 50, 20, 54, 25, 22, 23, 24, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 44, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 4, 59, 7, 0, 0, 0, 0 },
			{ 0, 58, 59, 0 },
			{ 0, 33, 17, 16, 4, 55, 52, 29, 50, 12, 11, 15, 7, 0, 0, 0, 0, 0 },
			{ 0, 12, 11, 55, 29, 50, 52, 33, 17, 16, 48, 4, 59, 7, 15, 0, 0, 0, 0, 0 },
			{ 0, 56, 55, 54, 53, 50, 48, 28, 27, 19, 18, 21, 20, 26, 49, 51, 59, 25, 22, 23, 24, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 44, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 33, 21, 18, 17, 16, 14, 4, 55, 52, 13, 19, 29, 26, 50, 20, 12, 11, 25, 15, 23, 22, 24, 7, 0, 0, 0, 0 },
			{ 0, 4, 7, 0, 0, 0, 0 },
			{ 0, 58, 0 },
			{ 0, 2, 12, 59 },
			{ 0, 2, 12 },
			{ 0, 3, 59, 10, 8, 6, 5, 0, 0, 0, 0 },
			{ 0, 3, 10, 8, 6, 5, 0, 0, 0, 0 },
			{ 0, 4, 59, 10, 7, 8, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 10, 8, 6, 5, 0, 0, 0, 0 },
			{ 0, 59, 10, 8, 6, 5, 0, 0, 0, 0 },
			{ 0, 28, 48 },
			{ 0, 27, 48 },
			{ 0, 21, 19, 18, 48, 26, 20, 25, 23, 22, 24, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 44, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 19, 18, 21, 48, 26, 49, 20, 25, 22, 23, 24, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 44, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 33, 17, 16, 4, 55, 52, 48, 29, 50, 12, 11, 15, 7, 0, 0, 0, 0, 0 },
			{ 0, 48 },
			{ 0, 19, 18, 49 },
			{ 0, 18, 19 },
			{ 0, 48, 12, 11, 55, 29, 50, 52, 33, 17, 16, 4, 59, 7, 15, 0, 0, 0, 0, 0 },
			{ 0, 48, 59 },
			{ 0, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 44, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 56, 55, 54, 53, 48, 28, 27, 19, 18, 21, 20, 26, 49, 9, 51, 59, 25, 22, 23, 24, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 44, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 30, 35, 59, 0, 30, 35, 30, 30, 30, 30 },
			{ 0, 12 },
			{ 0, 31, 0, 31, 0 },
			{ 0, 3 },
			{ 0, 3, 59 },
			{ 0, 48, 49 },
			{ 0, 28 },
			{ 0, 27 },
			{ 0, 19, 18, 48, 26, 49 },
			{ 0, 18, 19, 48, 49, 25, 0 },
			{ 0, 49, 19, 18, 48, 24, 0 },
			{ 0, 49, 19, 18, 48, 23, 0 },
			{ 0, 49, 19, 18, 48, 22, 0 },
			{ 0, 18, 21, 19, 48, 49 },
			{ 0, 49, 19, 18, 48, 20 },
			{ 0, 49 },
			{ 0, 56, 55, 54, 53, 48, 28, 27, 19, 18, 21, 20, 26, 49, 51, 59, 25, 22, 23, 24, 43, 45, 40, 39, 42, 41, 38, 37, 34, 46, 44, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
			{ 0, 57, 59, 0, 57, 57, 57 },
			{ 0, 57, 0, 57, 57, 57 },
			{ 0, 9 },
			{ 0, 21, 48, 26, 20, 25, 23, 22, 24 },
			{ 0, 21, 26, 49, 20, 25, 23, 22, 24 },
			{ 0, 51 },
			{ 0, 30, 0, 30, 30, 30 },
			{ 0, 2, 3, 59 },
			{ 0, 2, 3 },
			{ 0, 12, 59 },
			{ 0, 36, 0, 36, 0 },
			{ 0, 35, 35 }
		};

		#endif

		// Symbol information table
		const _syminfo symbols[ 234 ] =
		{
			{ /* 0 */ "&eof", "", 3, bool(0), bool(0), bool(1) },
			{ /* 1 */ ";", "", 2, bool(0), bool(0), bool(1) },
			{ /* 2 */ "%", "", 2, bool(0), bool(0), bool(1) },
			{ /* 3 */ "string_raw", "string_raw", 2, bool(0), bool(0), bool(1) },
			{ /* 4 */ ":\\\\:", "", 2, bool(0), bool(0), bool(1) },
			{ /* 5 */ ":|:", "", 2, bool(0), bool(0), bool(1) },
			{ /* 6 */ "string", "string", 2, bool(0), bool(0), bool(1) },
			{ /* 7 */ ":/:", "", 2, bool(0), bool(0), bool(1) },
			{ /* 8 */ ":", "", 2, bool(0), bool(0), bool(1) },
			{ /* 9 */ ":!", "", 2, bool(0), bool(0), bool(1) },
			{ /* 10 */ "#", "", 2, bool(0), bool(0), bool(1) },
			{ /* 11 */ "$", "", 2, bool(0), bool(0), bool(1) },
			{ /* 12 */ "/", "", 2, bool(0), bool(0), bool(1) },
			{ /* 13 */ "\\\\", "", 2, bool(0), bool(0), bool(1) },
			{ /* 14 */ "--", "", 2, bool(0), bool(0), bool(1) },
			{ /* 15 */ "{", "", 2, bool(0), bool(0), bool(1) },
			{ /* 16 */ "[", "", 2, bool(0), bool(0), bool(1) },
			{ /* 17 */ "~", "", 2, bool(0), bool(0), bool(1) },
			{ /* 18 */ "-", "", 2, bool(0), bool(0), bool(1) },
			{ /* 19 */ "&", "", 2, bool(0), bool(0), bool(1) },
			{ /* 20 */ "|", "", 2, bool(0), bool(0), bool(1) },
			{ /* 21 */ "&|", "", 2, bool(0), bool(0), bool(1) },
			{ /* 22 */ "&/", "", 2, bool(0), bool(0), bool(1) },
			{ /* 23 */ "&&", "", 2, bool(0), bool(0), bool(1) },
			{ /* 24 */ "||", "", 2, bool(0), bool(0), bool(1) },
			{ /* 25 */ "*", "", 2, bool(0), bool(0), bool(1) },
			{ /* 26 */ "}", "", 2, bool(0), bool(0), bool(1) },
			{ /* 27 */ "]", "", 2, bool(0), bool(0), bool(1) },
			{ /* 28 */ "+", "", 2, bool(0), bool(0), bool(1) },
			{ /* 29 */ "quality", "quality", 2, bool(0), bool(0), bool(1) },
			{ /* 30 */ "durability", "durability", 2, bool(0), bool(0), bool(1) },
			{ /* 31 */ "priority", "priority", 2, bool(0), bool(0), bool(1) },
			{ /* 32 */ "^", "", 2, bool(0), bool(0), bool(1) },
			{ /* 33 */ "<|>", "", 2, bool(0), bool(0), bool(1) },
			{ /* 34 */ "k_evidence", "k_evidence", 2, bool(0), bool(0), bool(1) },
			{ /* 35 */ "confidence", "confidence", 2, bool(0), bool(0), bool(1) },
			{ /* 36 */ "</>", "", 2, bool(0), bool(0), bool(1) },
			{ /* 37 */ "<=>", "", 2, bool(0), bool(0), bool(1) },
			{ /* 38 */ "=\\\\>", "", 2, bool(0), bool(0), bool(1) },
			{ /* 39 */ "=|>", "", 2, bool(0), bool(0), bool(1) },
			{ /* 40 */ "=/>", "", 2, bool(0), bool(0), bool(1) },
			{ /* 41 */ "==>", "", 2, bool(0), bool(0), bool(1) },
			{ /* 42 */ "{-]", "", 2, bool(0), bool(0), bool(1) },
			{ /* 43 */ "--]", "", 2, bool(0), bool(0), bool(1) },
			{ /* 44 */ "{--", "", 2, bool(0), bool(0), bool(1) },
			{ /* 45 */ "<->", "", 2, bool(0), bool(0), bool(1) },
			{ /* 46 */ "-->", "", 2, bool(0), bool(0), bool(1) },
			{ /* 47 */ ",", "", 2, bool(0), bool(0), bool(1) },
			{ /* 48 */ ")", "", 2, bool(0), bool(0), bool(1) },
			{ /* 49 */ "(", "", 2, bool(0), bool(0), bool(1) },
			{ /* 50 */ ">", "", 2, bool(0), bool(0), bool(1) },
			{ /* 51 */ "<", "", 2, bool(0), bool(0), bool(1) },
			{ /* 52 */ "@", "", 2, bool(0), bool(0), bool(1) },
			{ /* 53 */ "!", "", 2, bool(0), bool(0), bool(1) },
			{ /* 54 */ "?", "", 2, bool(0), bool(0), bool(1) },
			{ /* 55 */ ".", "", 2, bool(0), bool(0), bool(1) },
			{ /* 56 */ "frequency", "frequency", 2, bool(0), bool(0), bool(1) },
			{ /* 57 */ "integer", "integer", 2, bool(0), bool(0), bool(1) },
			{ /* 58 */ "\\t ", "", 1, bool(0), bool(1), bool(1) },
			{ /* 59 */ "task''", "", 0, bool(0), bool(0), bool(1) },
			{ /* 60 */ "quality'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 61 */ "durability'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 62 */ "priority'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 63 */ "k_evidence'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 64 */ "confidence'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 65 */ ";'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 66 */ "frequency'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 67 */ "%'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 68 */ "+'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 69 */ "['", "", 0, bool(0), bool(0), bool(1) },
			{ /* 70 */ "]'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 71 */ "{'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 72 */ "}'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 73 */ "~'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 74 */ "-'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 75 */ "&'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 76 */ "|'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 77 */ "&|'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 78 */ "&/'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 79 */ "&&'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 80 */ "||'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 81 */ "*'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 82 */ "/'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 83 */ "\\\\'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 84 */ "--'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 85 */ "<|>'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 86 */ "</>'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 87 */ "<=>'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 88 */ "=\\\\>'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 89 */ "=|>'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 90 */ "=/>'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 91 */ "==>'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 92 */ "{-]'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 93 */ "--]'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 94 */ "{--'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 95 */ "<->'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 96 */ "-->'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 97 */ ">'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 98 */ "<'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 99 */ "^'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 100 */ "string_raw'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 101 */ "string'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 102 */ "#'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 103 */ "$'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 104 */ ",'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 105 */ ")'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 106 */ "('", "", 0, bool(0), bool(0), bool(1) },
			{ /* 107 */ ":\\\\:'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 108 */ ":|:'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 109 */ ":/:'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 110 */ ":'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 111 */ "integer'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 112 */ ":!'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 113 */ "@'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 114 */ "!'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 115 */ "?'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 116 */ ".'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 117 */ "&whitespace*", "", 0, bool(1), bool(1), bool(1) },
			{ /* 118 */ "&whitespace+", "", 0, bool(1), bool(1), bool(1) },
			{ /* 119 */ "&whitespace", "", 0, bool(1), bool(1), bool(1) },
			{ /* 120 */ "task'", "", 0, bool(0), bool(0), bool(1) },
			{ /* 121 */ "&embedded_39", "", 0, bool(0), bool(0), bool(1) },
			{ /* 122 */ "&embedded_38?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 123 */ "&embedded_38", "", 0, bool(0), bool(0), bool(1) },
			{ /* 124 */ "&embedded_37?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 125 */ "&embedded_37", "", 0, bool(0), bool(0), bool(1) },
			{ /* 126 */ "&embedded_36?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 127 */ "&embedded_36", "", 0, bool(0), bool(0), bool(1) },
			{ /* 128 */ "&embedded_35?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 129 */ "&embedded_35", "", 0, bool(0), bool(0), bool(1) },
			{ /* 130 */ "&embedded_34+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 131 */ "&embedded_34", "", 0, bool(0), bool(0), bool(1) },
			{ /* 132 */ "&embedded_33+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 133 */ "&embedded_33", "", 0, bool(0), bool(0), bool(1) },
			{ /* 134 */ "&embedded_32+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 135 */ "&embedded_32", "", 0, bool(0), bool(0), bool(1) },
			{ /* 136 */ "&embedded_31+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 137 */ "&embedded_31", "", 0, bool(0), bool(0), bool(1) },
			{ /* 138 */ "&embedded_30+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 139 */ "&embedded_30", "", 0, bool(0), bool(0), bool(1) },
			{ /* 140 */ "&embedded_29+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 141 */ "&embedded_29", "", 0, bool(0), bool(0), bool(1) },
			{ /* 142 */ "&embedded_28+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 143 */ "&embedded_28", "", 0, bool(0), bool(0), bool(1) },
			{ /* 144 */ "multi_prod_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 145 */ "multi_disj_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 146 */ "multi_conj_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 147 */ "multi_sequential_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 148 */ "multi_parallel_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 149 */ "multi_intint_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 150 */ "multi_extint_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 151 */ "&embedded_27", "", 0, bool(0), bool(0), bool(1) },
			{ /* 152 */ "&embedded_26", "", 0, bool(0), bool(0), bool(1) },
			{ /* 153 */ "&embedded_25", "", 0, bool(0), bool(0), bool(1) },
			{ /* 154 */ "&embedded_24", "", 0, bool(0), bool(0), bool(1) },
			{ /* 155 */ "con_single", "", 0, bool(0), bool(0), bool(1) },
			{ /* 156 */ "&embedded_23", "", 0, bool(0), bool(0), bool(1) },
			{ /* 157 */ "&embedded_22*", "", 0, bool(0), bool(0), bool(1) },
			{ /* 158 */ "&embedded_22+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 159 */ "&embedded_22", "", 0, bool(0), bool(0), bool(1) },
			{ /* 160 */ "con_product", "", 0, bool(0), bool(0), bool(1) },
			{ /* 161 */ "&embedded_21+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 162 */ "&embedded_21", "", 0, bool(0), bool(0), bool(1) },
			{ /* 163 */ "con_multi", "", 0, bool(0), bool(0), bool(1) },
			{ /* 164 */ "&embedded_20+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 165 */ "&embedded_20", "", 0, bool(0), bool(0), bool(1) },
			{ /* 166 */ "multi_infix_expr", "", 0, bool(0), bool(0), bool(1) },
			{ /* 167 */ "&embedded_19*", "", 0, bool(0), bool(0), bool(1) },
			{ /* 168 */ "&embedded_19+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 169 */ "&embedded_19", "", 0, bool(0), bool(0), bool(1) },
			{ /* 170 */ "con_ext_image", "", 0, bool(0), bool(0), bool(1) },
			{ /* 171 */ "&embedded_18*", "", 0, bool(0), bool(0), bool(1) },
			{ /* 172 */ "&embedded_18+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 173 */ "&embedded_18", "", 0, bool(0), bool(0), bool(1) },
			{ /* 174 */ "con_int_image", "", 0, bool(0), bool(0), bool(1) },
			{ /* 175 */ "&embedded_17", "", 0, bool(0), bool(0), bool(1) },
			{ /* 176 */ "con_negation", "", 0, bool(0), bool(0), bool(1) },
			{ /* 177 */ "&embedded_16*", "", 0, bool(0), bool(0), bool(1) },
			{ /* 178 */ "&embedded_16+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 179 */ "&embedded_16", "", 0, bool(0), bool(0), bool(1) },
			{ /* 180 */ "con_ext_set", "", 0, bool(0), bool(0), bool(1) },
			{ /* 181 */ "&embedded_15*", "", 0, bool(0), bool(0), bool(1) },
			{ /* 182 */ "&embedded_15+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 183 */ "&embedded_15", "", 0, bool(0), bool(0), bool(1) },
			{ /* 184 */ "con_int_set", "", 0, bool(0), bool(0), bool(1) },
			{ /* 185 */ "&embedded_14", "", 0, bool(0), bool(0), bool(1) },
			{ /* 186 */ "ext_set", "", 0, bool(0), bool(0), bool(1) },
			{ /* 187 */ "int_set", "", 0, bool(0), bool(0), bool(1) },
			{ /* 188 */ "negation", "", 0, bool(0), bool(0), bool(1) },
			{ /* 189 */ "int_image", "", 0, bool(0), bool(0), bool(1) },
			{ /* 190 */ "ext_image", "", 0, bool(0), bool(0), bool(1) },
			{ /* 191 */ "single", "", 0, bool(0), bool(0), bool(1) },
			{ /* 192 */ "multi", "", 0, bool(0), bool(0), bool(1) },
			{ /* 193 */ "set", "", 0, bool(0), bool(0), bool(1) },
			{ /* 194 */ "compound_term", "", 0, bool(0), bool(0), bool(1) },
			{ /* 195 */ "interval", "", 0, bool(0), bool(0), bool(1) },
			{ /* 196 */ "variable", "", 0, bool(0), bool(0), bool(1) },
			{ /* 197 */ "&embedded_13*", "", 0, bool(0), bool(0), bool(1) },
			{ /* 198 */ "&embedded_13+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 199 */ "&embedded_13", "", 0, bool(0), bool(0), bool(1) },
			{ /* 200 */ "word", "", 0, bool(0), bool(0), bool(1) },
			{ /* 201 */ "&embedded_12*", "", 0, bool(0), bool(0), bool(1) },
			{ /* 202 */ "&embedded_12+", "", 0, bool(0), bool(0), bool(1) },
			{ /* 203 */ "&embedded_12", "", 0, bool(0), bool(0), bool(1) },
			{ /* 204 */ "op", "", 0, bool(0), bool(0), bool(1) },
			{ /* 205 */ "&embedded_11", "", 0, bool(0), bool(0), bool(1) },
			{ /* 206 */ "copula", "", 0, bool(0), bool(0), bool(1) },
			{ /* 207 */ "term", "", 0, bool(0), bool(0), bool(1) },
			{ /* 208 */ "&embedded_10?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 209 */ "&embedded_10", "", 0, bool(0), bool(0), bool(1) },
			{ /* 210 */ "&embedded_9", "", 0, bool(0), bool(0), bool(1) },
			{ /* 211 */ "&embedded_8?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 212 */ "&embedded_8", "", 0, bool(0), bool(0), bool(1) },
			{ /* 213 */ "desire", "", 0, bool(0), bool(0), bool(1) },
			{ /* 214 */ "&embedded_7?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 215 */ "&embedded_7", "", 0, bool(0), bool(0), bool(1) },
			{ /* 216 */ "&embedded_6", "", 0, bool(0), bool(0), bool(1) },
			{ /* 217 */ "&embedded_5?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 218 */ "&embedded_5", "", 0, bool(0), bool(0), bool(1) },
			{ /* 219 */ "&embedded_4", "", 0, bool(0), bool(0), bool(1) },
			{ /* 220 */ "&embedded_3?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 221 */ "&embedded_3", "", 0, bool(0), bool(0), bool(1) },
			{ /* 222 */ "truth", "", 0, bool(0), bool(0), bool(1) },
			{ /* 223 */ "&embedded_2?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 224 */ "&embedded_2", "", 0, bool(0), bool(0), bool(1) },
			{ /* 225 */ "tense", "", 0, bool(0), bool(0), bool(1) },
			{ /* 226 */ "&embedded_1", "", 0, bool(0), bool(0), bool(1) },
			{ /* 227 */ "statement", "", 0, bool(0), bool(0), bool(1) },
			{ /* 228 */ "term_nonvar", "", 0, bool(0), bool(0), bool(1) },
			{ /* 229 */ "sentence", "", 0, bool(0), bool(0), bool(1) },
			{ /* 230 */ "&embedded_0?", "", 0, bool(0), bool(0), bool(1) },
			{ /* 231 */ "&embedded_0", "", 0, bool(0), bool(0), bool(1) },
			{ /* 232 */ "budget", "", 0, bool(0), bool(0), bool(1) },
			{ /* 233 */ "task", "", 0, bool(0), bool(0), bool(1) }
		};

		// Production information table
		const _prodinfo productions[ 270 ] =
		{
			{ /* 0 */ "&embedded_0 : budget", "", 1, 231 },
			{ /* 1 */ "&embedded_0? : &embedded_0", "", 1, 230 },
			{ /* 2 */ "&embedded_0? : ", "", 0, 230 },
			{ /* 3 */ "task : &embedded_0? sentence", "task", 2, 233 },
			{ /* 4 */ "&embedded_1 : term_nonvar", "", 1, 226 },
			{ /* 5 */ "&embedded_1 : statement", "", 1, 226 },
			{ /* 6 */ "sentence : &embedded_1 .' &embedded_2? &embedded_3?", "judgement", 4, 229 },
			{ /* 7 */ "&embedded_2 : tense", "", 1, 224 },
			{ /* 8 */ "&embedded_2? : &embedded_2", "", 1, 223 },
			{ /* 9 */ "&embedded_2? : ", "", 0, 223 },
			{ /* 10 */ "&embedded_3 : truth", "", 1, 221 },
			{ /* 11 */ "&embedded_3? : &embedded_3", "", 1, 220 },
			{ /* 12 */ "&embedded_3? : ", "", 0, 220 },
			{ /* 13 */ "&embedded_4 : term_nonvar", "", 1, 219 },
			{ /* 14 */ "&embedded_4 : statement", "", 1, 219 },
			{ /* 15 */ "sentence : &embedded_4 ?' &embedded_5?", "question", 3, 229 },
			{ /* 16 */ "&embedded_5 : tense", "", 1, 218 },
			{ /* 17 */ "&embedded_5? : &embedded_5", "", 1, 217 },
			{ /* 18 */ "&embedded_5? : ", "", 0, 217 },
			{ /* 19 */ "&embedded_6 : term_nonvar", "", 1, 216 },
			{ /* 20 */ "&embedded_6 : statement", "", 1, 216 },
			{ /* 21 */ "sentence : &embedded_6 !' &embedded_7? &embedded_8?", "goal", 4, 229 },
			{ /* 22 */ "&embedded_7 : tense", "", 1, 215 },
			{ /* 23 */ "&embedded_7? : &embedded_7", "", 1, 214 },
			{ /* 24 */ "&embedded_7? : ", "", 0, 214 },
			{ /* 25 */ "&embedded_8 : desire", "", 1, 212 },
			{ /* 26 */ "&embedded_8? : &embedded_8", "", 1, 211 },
			{ /* 27 */ "&embedded_8? : ", "", 0, 211 },
			{ /* 28 */ "&embedded_9 : term_nonvar", "", 1, 210 },
			{ /* 29 */ "&embedded_9 : statement", "", 1, 210 },
			{ /* 30 */ "sentence : &embedded_9 @' &embedded_10?", "quest", 3, 229 },
			{ /* 31 */ "&embedded_10 : tense", "", 1, 209 },
			{ /* 32 */ "&embedded_10? : &embedded_10", "", 1, 208 },
			{ /* 33 */ "&embedded_10? : ", "", 0, 208 },
			{ /* 34 */ "&embedded_11 : <' term copula term >'", "", 5, 205 },
			{ /* 35 */ "&embedded_11 : (' term copula term )'", "", 5, 205 },
			{ /* 36 */ "statement : &embedded_11", "statement", 1, 227 },
			{ /* 37 */ "statement : (' op &embedded_12* )'", "statement_operation1", 4, 227 },
			{ /* 38 */ "&embedded_12 : ,' term", "", 2, 203 },
			{ /* 39 */ "&embedded_12+ : &embedded_12+ &embedded_12", "", 2, 202 },
			{ /* 40 */ "&embedded_12+ : &embedded_12", "", 1, 202 },
			{ /* 41 */ "&embedded_12* : &embedded_12+", "", 1, 201 },
			{ /* 42 */ "&embedded_12* : ", "", 0, 201 },
			{ /* 43 */ "statement : word (' term &embedded_13* )'", "statement_operation2", 5, 227 },
			{ /* 44 */ "&embedded_13 : ,' term", "", 2, 199 },
			{ /* 45 */ "&embedded_13+ : &embedded_13+ &embedded_13", "", 2, 198 },
			{ /* 46 */ "&embedded_13+ : &embedded_13", "", 1, 198 },
			{ /* 47 */ "&embedded_13* : &embedded_13+", "", 1, 197 },
			{ /* 48 */ "&embedded_13* : ", "", 0, 197 },
			{ /* 49 */ "copula : -->'", "inheritance", 1, 206 },
			{ /* 50 */ "copula : <->'", "similarity", 1, 206 },
			{ /* 51 */ "copula : {--'", "instance", 1, 206 },
			{ /* 52 */ "copula : --]'", "property", 1, 206 },
			{ /* 53 */ "copula : {-]'", "instance_property", 1, 206 },
			{ /* 54 */ "copula : ==>'", "implication", 1, 206 },
			{ /* 55 */ "copula : =/>'", "predictive_implication", 1, 206 },
			{ /* 56 */ "copula : =|>'", "concurrent_implication", 1, 206 },
			{ /* 57 */ "copula : =\\\\>'", "retrospective_implication", 1, 206 },
			{ /* 58 */ "copula : <=>'", "equivalence", 1, 206 },
			{ /* 59 */ "copula : </>'", "predictive_equivalence", 1, 206 },
			{ /* 60 */ "copula : <|>'", "concurrent_equivalence", 1, 206 },
			{ /* 61 */ "term : variable", "variable_term", 1, 207 },
			{ /* 62 */ "term : term_nonvar", "", 1, 207 },
			{ /* 63 */ "term_nonvar : interval", "", 1, 228 },
			{ /* 64 */ "term_nonvar : word", "atom_term", 1, 228 },
			{ /* 65 */ "term_nonvar : compound_term", "compound_term", 1, 228 },
			{ /* 66 */ "term_nonvar : statement", "statement_term", 1, 228 },
			{ /* 67 */ "term_nonvar : op", "", 1, 228 },
			{ /* 68 */ "op : ^' word", "operation", 2, 204 },
			{ /* 69 */ "interval : +' integer'", "interval", 2, 195 },
			{ /* 70 */ "compound_term : set", "", 1, 194 },
			{ /* 71 */ "compound_term : multi", "", 1, 194 },
			{ /* 72 */ "compound_term : single", "", 1, 194 },
			{ /* 73 */ "compound_term : ext_image", "", 1, 194 },
			{ /* 74 */ "compound_term : int_image", "", 1, 194 },
			{ /* 75 */ "compound_term : negation", "", 1, 194 },
			{ /* 76 */ "&embedded_14 : int_set", "", 1, 185 },
			{ /* 77 */ "&embedded_14 : ext_set", "", 1, 185 },
			{ /* 78 */ "set : &embedded_14", "set", 1, 193 },
			{ /* 79 */ "int_set : con_int_set term &embedded_15* ]'", "", 4, 187 },
			{ /* 80 */ "&embedded_15 : ,' term", "", 2, 183 },
			{ /* 81 */ "&embedded_15+ : &embedded_15+ &embedded_15", "", 2, 182 },
			{ /* 82 */ "&embedded_15+ : &embedded_15", "", 1, 182 },
			{ /* 83 */ "&embedded_15* : &embedded_15+", "", 1, 181 },
			{ /* 84 */ "&embedded_15* : ", "", 0, 181 },
			{ /* 85 */ "ext_set : con_ext_set term &embedded_16* }'", "", 4, 186 },
			{ /* 86 */ "&embedded_16 : ,' term", "", 2, 179 },
			{ /* 87 */ "&embedded_16+ : &embedded_16+ &embedded_16", "", 2, 178 },
			{ /* 88 */ "&embedded_16+ : &embedded_16", "", 1, 178 },
			{ /* 89 */ "&embedded_16* : &embedded_16+", "", 1, 177 },
			{ /* 90 */ "&embedded_16* : ", "", 0, 177 },
			{ /* 91 */ "&embedded_17 : con_negation term", "", 2, 175 },
			{ /* 92 */ "&embedded_17 : (' con_negation ,' term )'", "", 5, 175 },
			{ /* 93 */ "negation : &embedded_17", "negation", 1, 188 },
			{ /* 94 */ "int_image : (' con_int_image ,' term &embedded_18* )'", "int_image", 6, 189 },
			{ /* 95 */ "&embedded_18 : ,' term", "", 2, 173 },
			{ /* 96 */ "&embedded_18+ : &embedded_18+ &embedded_18", "", 2, 172 },
			{ /* 97 */ "&embedded_18+ : &embedded_18", "", 1, 172 },
			{ /* 98 */ "&embedded_18* : &embedded_18+", "", 1, 171 },
			{ /* 99 */ "&embedded_18* : ", "", 0, 171 },
			{ /* 100 */ "ext_image : (' con_ext_image ,' term &embedded_19* )'", "ext_image", 6, 190 },
			{ /* 101 */ "&embedded_19 : ,' term", "", 2, 169 },
			{ /* 102 */ "&embedded_19+ : &embedded_19+ &embedded_19", "", 2, 168 },
			{ /* 103 */ "&embedded_19+ : &embedded_19", "", 1, 168 },
			{ /* 104 */ "&embedded_19* : &embedded_19+", "", 1, 167 },
			{ /* 105 */ "&embedded_19* : ", "", 0, 167 },
			{ /* 106 */ "multi : (' multi_infix_expr )'", "multi_infix", 3, 192 },
			{ /* 107 */ "multi : (' term &embedded_20+ )'", "multi_prefix_product", 4, 192 },
			{ /* 108 */ "&embedded_20 : ,' term", "", 2, 165 },
			{ /* 109 */ "&embedded_20+ : &embedded_20+ &embedded_20", "", 2, 164 },
			{ /* 110 */ "&embedded_20+ : &embedded_20", "", 1, 164 },
			{ /* 111 */ "&embedded_23 : (' con_multi ,' term &embedded_21+ )'", "", 6, 156 },
			{ /* 112 */ "&embedded_21 : ,' term", "", 2, 162 },
			{ /* 113 */ "&embedded_21+ : &embedded_21+ &embedded_21", "", 2, 161 },
			{ /* 114 */ "&embedded_21+ : &embedded_21", "", 1, 161 },
			{ /* 115 */ "&embedded_23 : (' con_product ,' term &embedded_22* )'", "", 6, 156 },
			{ /* 116 */ "&embedded_22 : ,' term", "", 2, 159 },
			{ /* 117 */ "&embedded_22+ : &embedded_22+ &embedded_22", "", 2, 158 },
			{ /* 118 */ "&embedded_22+ : &embedded_22", "", 1, 158 },
			{ /* 119 */ "&embedded_22* : &embedded_22+", "", 1, 157 },
			{ /* 120 */ "&embedded_22* : ", "", 0, 157 },
			{ /* 121 */ "multi : &embedded_23", "multi_prefix", 1, 192 },
			{ /* 122 */ "single : (' con_single ,' &embedded_24 ,' &embedded_25 )'", "single_prefix", 7, 191 },
			{ /* 123 */ "&embedded_24 : term", "", 1, 154 },
			{ /* 124 */ "&embedded_24 : multi_infix_expr", "", 1, 154 },
			{ /* 125 */ "&embedded_25 : term", "", 1, 153 },
			{ /* 126 */ "&embedded_25 : multi_infix_expr", "", 1, 153 },
			{ /* 127 */ "single : (' &embedded_26 con_single &embedded_27 )'", "single_infix", 5, 191 },
			{ /* 128 */ "&embedded_26 : term", "", 1, 152 },
			{ /* 129 */ "&embedded_26 : multi_infix_expr", "", 1, 152 },
			{ /* 130 */ "&embedded_27 : term", "", 1, 151 },
			{ /* 131 */ "&embedded_27 : multi_infix_expr", "", 1, 151 },
			{ /* 132 */ "multi_infix_expr : multi_extint_expr", "", 1, 166 },
			{ /* 133 */ "multi_infix_expr : multi_intint_expr", "", 1, 166 },
			{ /* 134 */ "multi_infix_expr : multi_parallel_expr", "", 1, 166 },
			{ /* 135 */ "multi_infix_expr : multi_sequential_expr", "", 1, 166 },
			{ /* 136 */ "multi_infix_expr : multi_conj_expr", "", 1, 166 },
			{ /* 137 */ "multi_infix_expr : multi_disj_expr", "", 1, 166 },
			{ /* 138 */ "multi_infix_expr : multi_prod_expr", "", 1, 166 },
			{ /* 139 */ "multi_prod_expr : term &embedded_28+", "multi_prod_expr", 2, 144 },
			{ /* 140 */ "&embedded_28 : *' term", "", 2, 143 },
			{ /* 141 */ "&embedded_28+ : &embedded_28+ &embedded_28", "", 2, 142 },
			{ /* 142 */ "&embedded_28+ : &embedded_28", "", 1, 142 },
			{ /* 143 */ "multi_disj_expr : term &embedded_29+", "multi_disj_expr", 2, 145 },
			{ /* 144 */ "&embedded_29 : ||' term", "", 2, 141 },
			{ /* 145 */ "&embedded_29+ : &embedded_29+ &embedded_29", "", 2, 140 },
			{ /* 146 */ "&embedded_29+ : &embedded_29", "", 1, 140 },
			{ /* 147 */ "multi_conj_expr : term &embedded_30+", "multi_conj_expr", 2, 146 },
			{ /* 148 */ "&embedded_30 : &&' term", "", 2, 139 },
			{ /* 149 */ "&embedded_30+ : &embedded_30+ &embedded_30", "", 2, 138 },
			{ /* 150 */ "&embedded_30+ : &embedded_30", "", 1, 138 },
			{ /* 151 */ "multi_sequential_expr : term &embedded_31+", "multi_sequential_expr", 2, 147 },
			{ /* 152 */ "&embedded_31 : &/' term", "", 2, 137 },
			{ /* 153 */ "&embedded_31+ : &embedded_31+ &embedded_31", "", 2, 136 },
			{ /* 154 */ "&embedded_31+ : &embedded_31", "", 1, 136 },
			{ /* 155 */ "multi_parallel_expr : term &embedded_32+", "multi_parallel_expr", 2, 148 },
			{ /* 156 */ "&embedded_32 : &|' term", "", 2, 135 },
			{ /* 157 */ "&embedded_32+ : &embedded_32+ &embedded_32", "", 2, 134 },
			{ /* 158 */ "&embedded_32+ : &embedded_32", "", 1, 134 },
			{ /* 159 */ "multi_intint_expr : term &embedded_33+", "multi_intint_expr", 2, 149 },
			{ /* 160 */ "&embedded_33 : |' term", "", 2, 133 },
			{ /* 161 */ "&embedded_33+ : &embedded_33+ &embedded_33", "", 2, 132 },
			{ /* 162 */ "&embedded_33+ : &embedded_33", "", 1, 132 },
			{ /* 163 */ "multi_extint_expr : term &embedded_34+", "multi_extint_expr", 2, 150 },
			{ /* 164 */ "&embedded_34 : &' term", "", 2, 131 },
			{ /* 165 */ "&embedded_34+ : &embedded_34+ &embedded_34", "", 2, 130 },
			{ /* 166 */ "&embedded_34+ : &embedded_34", "", 1, 130 },
			{ /* 167 */ "con_multi : &&'", "con_conjunction", 1, 163 },
			{ /* 168 */ "con_multi : ||'", "con_disjunction", 1, 163 },
			{ /* 169 */ "con_multi : &|'", "con_parallel_events", 1, 163 },
			{ /* 170 */ "con_multi : &/'", "con_sequential_events", 1, 163 },
			{ /* 171 */ "con_multi : |'", "con_intensional_intersection", 1, 163 },
			{ /* 172 */ "con_multi : &'", "con_extensional_intersection", 1, 163 },
			{ /* 173 */ "con_product : *'", "con_product", 1, 160 },
			{ /* 174 */ "con_single : -'", "con_extensional_difference", 1, 155 },
			{ /* 175 */ "con_single : ~'", "con_intensional_difference", 1, 155 },
			{ /* 176 */ "con_int_set : ['", "con_int_set", 1, 184 },
			{ /* 177 */ "con_ext_set : {'", "con_ext_set", 1, 180 },
			{ /* 178 */ "con_negation : --'", "con_negation", 1, 176 },
			{ /* 179 */ "con_int_image : \\\\'", "con_int_image", 1, 174 },
			{ /* 180 */ "con_ext_image : /'", "con_ext_image", 1, 170 },
			{ /* 181 */ "variable : $' word", "independent_var", 2, 196 },
			{ /* 182 */ "variable : #' word", "dependent_var", 2, 196 },
			{ /* 183 */ "variable : ?' word", "query_var", 2, 196 },
			{ /* 184 */ "tense : :!' integer' :'", "tense_time", 3, 225 },
			{ /* 185 */ "tense : :/:'", "tense_future", 1, 225 },
			{ /* 186 */ "tense : :|:'", "tense_present", 1, 225 },
			{ /* 187 */ "tense : :\\\\:'", "tense_past", 1, 225 },
			{ /* 188 */ "desire : truth", "", 1, 213 },
			{ /* 189 */ "truth : %' frequency' &embedded_36? %'", "truth", 4, 222 },
			{ /* 190 */ "&embedded_36 : ;' confidence' &embedded_35?", "", 3, 127 },
			{ /* 191 */ "&embedded_35 : ;' k_evidence'", "", 2, 129 },
			{ /* 192 */ "&embedded_35? : &embedded_35", "", 1, 128 },
			{ /* 193 */ "&embedded_35? : ", "", 0, 128 },
			{ /* 194 */ "&embedded_36? : &embedded_36", "", 1, 126 },
			{ /* 195 */ "&embedded_36? : ", "", 0, 126 },
			{ /* 196 */ "budget : $' priority' &embedded_38? $'", "budget", 4, 232 },
			{ /* 197 */ "&embedded_38 : ;' durability' &embedded_37?", "", 3, 123 },
			{ /* 198 */ "&embedded_37 : ;' quality'", "", 2, 125 },
			{ /* 199 */ "&embedded_37? : &embedded_37", "", 1, 124 },
			{ /* 200 */ "&embedded_37? : ", "", 0, 124 },
			{ /* 201 */ "&embedded_38? : &embedded_38", "", 1, 122 },
			{ /* 202 */ "&embedded_38? : ", "", 0, 122 },
			{ /* 203 */ "&embedded_39 : string'", "", 1, 121 },
			{ /* 204 */ "&embedded_39 : string_raw'", "", 1, 121 },
			{ /* 205 */ "word : &embedded_39", "", 1, 200 },
			{ /* 206 */ "task' : task ~&eof", "", 2, 120 },
			{ /* 207 */ "&whitespace : '\\t '", "", 1, 119 },
			{ /* 208 */ "&whitespace+ : &whitespace+ &whitespace", "", 2, 118 },
			{ /* 209 */ "&whitespace+ : &whitespace", "", 1, 118 },
			{ /* 210 */ "&whitespace* : &whitespace+", "", 1, 117 },
			{ /* 211 */ "&whitespace* : ", "", 0, 117 },
			{ /* 212 */ ".' : \".\" &whitespace*", "", 2, 116 },
			{ /* 213 */ "?' : \"?\" &whitespace*", "", 2, 115 },
			{ /* 214 */ "!' : \"!\" &whitespace*", "", 2, 114 },
			{ /* 215 */ "@' : \"@\" &whitespace*", "", 2, 113 },
			{ /* 216 */ ":!' : \":!\" &whitespace*", "", 2, 112 },
			{ /* 217 */ "integer' : @integer &whitespace*", "", 2, 111 },
			{ /* 218 */ ":' : \":\" &whitespace*", "", 2, 110 },
			{ /* 219 */ ":/:' : \":/:\" &whitespace*", "", 2, 109 },
			{ /* 220 */ ":|:' : \":|:\" &whitespace*", "", 2, 108 },
			{ /* 221 */ ":\\\\:' : \":\\\\:\" &whitespace*", "", 2, 107 },
			{ /* 222 */ "(' : \"(\" &whitespace*", "", 2, 106 },
			{ /* 223 */ ")' : \")\" &whitespace*", "", 2, 105 },
			{ /* 224 */ ",' : \",\" &whitespace*", "", 2, 104 },
			{ /* 225 */ "$' : \"$\" &whitespace*", "", 2, 103 },
			{ /* 226 */ "#' : \"#\" &whitespace*", "", 2, 102 },
			{ /* 227 */ "string' : @string &whitespace*", "", 2, 101 },
			{ /* 228 */ "string_raw' : @string_raw &whitespace*", "", 2, 100 },
			{ /* 229 */ "^' : \"^\" &whitespace*", "", 2, 99 },
			{ /* 230 */ "<' : \"<\" &whitespace*", "", 2, 98 },
			{ /* 231 */ ">' : \">\" &whitespace*", "", 2, 97 },
			{ /* 232 */ "-->' : \"-->\" &whitespace*", "", 2, 96 },
			{ /* 233 */ "<->' : \"<->\" &whitespace*", "", 2, 95 },
			{ /* 234 */ "{--' : \"{--\" &whitespace*", "", 2, 94 },
			{ /* 235 */ "--]' : \"--]\" &whitespace*", "", 2, 93 },
			{ /* 236 */ "{-]' : \"{-]\" &whitespace*", "", 2, 92 },
			{ /* 237 */ "==>' : \"==>\" &whitespace*", "", 2, 91 },
			{ /* 238 */ "=/>' : \"=/>\" &whitespace*", "", 2, 90 },
			{ /* 239 */ "=|>' : \"=|>\" &whitespace*", "", 2, 89 },
			{ /* 240 */ "=\\\\>' : \"=\\\\>\" &whitespace*", "", 2, 88 },
			{ /* 241 */ "<=>' : \"<=>\" &whitespace*", "", 2, 87 },
			{ /* 242 */ "</>' : \"</>\" &whitespace*", "", 2, 86 },
			{ /* 243 */ "<|>' : \"<|>\" &whitespace*", "", 2, 85 },
			{ /* 244 */ "--' : \"--\" &whitespace*", "", 2, 84 },
			{ /* 245 */ "\\\\' : \"\\\\\" &whitespace*", "", 2, 83 },
			{ /* 246 */ "/' : \"/\" &whitespace*", "", 2, 82 },
			{ /* 247 */ "*' : \"*\" &whitespace*", "", 2, 81 },
			{ /* 248 */ "||' : \"||\" &whitespace*", "", 2, 80 },
			{ /* 249 */ "&&' : \"&&\" &whitespace*", "", 2, 79 },
			{ /* 250 */ "&/' : \"&/\" &whitespace*", "", 2, 78 },
			{ /* 251 */ "&|' : \"&|\" &whitespace*", "", 2, 77 },
			{ /* 252 */ "|' : \"|\" &whitespace*", "", 2, 76 },
			{ /* 253 */ "&' : \"&\" &whitespace*", "", 2, 75 },
			{ /* 254 */ "-' : \"-\" &whitespace*", "", 2, 74 },
			{ /* 255 */ "~' : \"~\" &whitespace*", "", 2, 73 },
			{ /* 256 */ "}' : \"}\" &whitespace*", "", 2, 72 },
			{ /* 257 */ "{' : \"{\" &whitespace*", "", 2, 71 },
			{ /* 258 */ "]' : \"]\" &whitespace*", "", 2, 70 },
			{ /* 259 */ "[' : \"[\" &whitespace*", "", 2, 69 },
			{ /* 260 */ "+' : \"+\" &whitespace*", "", 2, 68 },
			{ /* 261 */ "%' : \"%\" &whitespace*", "", 2, 67 },
			{ /* 262 */ "frequency' : @frequency &whitespace*", "", 2, 66 },
			{ /* 263 */ ";' : \";\" &whitespace*", "", 2, 65 },
			{ /* 264 */ "confidence' : @confidence &whitespace*", "", 2, 64 },
			{ /* 265 */ "k_evidence' : @k_evidence &whitespace*", "", 2, 63 },
			{ /* 266 */ "priority' : @priority &whitespace*", "", 2, 62 },
			{ /* 267 */ "durability' : @durability &whitespace*", "", 2, 61 },
			{ /* 268 */ "quality' : @quality &whitespace*", "", 2, 60 },
			{ /* 269 */ "task'' : &whitespace* task'", "", 2, 59 }
		};

		// --- Runtime ---

		// Stack
		_tok*	stack;
		_tok*	tos;

		// Stack size
		size_t			stacksize;

		// Values
		_vtype	ret;
		_vtype	test;

		// State
		int				act;
		int				idx;
		int				lhs;

		// Lookahead
		int				sym;
		int				old_sym;
		size_t			len;

		// Input buffering
		UNICC_SCHAR*	lexem;
		UNICC_CHAR*		buf;
		UNICC_CHAR*		bufend;
		UNICC_CHAR*		bufsize;

		// Lexical analysis
		UNICC_CHAR		next;
		bool			is_eof;

		// Error handling
		int				error_delay;
		int				error_count;

		size_t			line;
		size_t			column;

		// User-defined components
		

		// Functions

		//fn.clearin.cpp
		void clear_input(void);

		//fn.debug.cpp
		#if UNICC_STACKDEBUG
		void dbg_stack( FILE* out, _tok* stack, _tok* tos )
		#endif

		//fn.getact.cpp
		bool get_act( void );

		//fn.getgo.cpp
		bool get_go( void );

		//fn.getinput.cpp
		UNICC_CHAR get_input( size_t offset );

		//fn.getsym.cpp
		bool get_sym( void );

		//fn.handleerr.cpp
		bool handle_error( FILE* _dbg );

		//fn.lex.cpp
		#if 70
		void lex( void );
		#endif

		//fn.stack.cpp
		bool alloc_stack( void );

		//fn.unicode.cpp
		UNICC_SCHAR* get_lexem( void );

	public:
		// EOF behavior
		UNICC_CHAR			eof;

		// Abstract syntax tree
		_ast*		ast;

		//fn.parse.cpp
		int parse( void );

		//fn.ast.cpp
		_ast* ast_free( _ast* node );
		_ast* ast_create( const char* emit, UNICC_SCHAR* token );
		void ast_print( FILE* stream, _ast* node );
};

#endif /* NARSESE_H */
